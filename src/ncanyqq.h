// QQ 协议分析
#ifndef __NCANYQQDEF___
#define __NCANYQQDEF___
// QQ 命令
#define    QQ_CMD_LOGIN_VERIFY          0x00dd
#define    QQ_CMD_LOGIN_VERIFYEXP       0x0826
#define    QQ_CMD_LOGIN_REQUESTINFO     0x0104
#define    QQ_CMD_FOCUSLOGOUT		    0x0030
#define    QQ_CMD_FOCUSLOGOUTEXP	    0x0828

// QQ版本号
#define QQ2009_SP5		0x1957
#define QQ2012_BT2		0x2e4b
// #define QQ2012_BT2		0x2107
#define QQ2011          0x2107
#define EXPQQ_VERSION	0x270d
#define QQ2012_BETA2	0x2e5d
#define TM2009				0x1a3a

#define QQ_NORMAL_IM_TEXT   0x000b

#define	QQ_RECV_IM_BUDDY_0801       0x0009
#define	QQ_RECV_IM_TO_UNKNOWN       0x000a
#define	QQ_RECV_IM_NEWS             0x0018
#define	QQ_RECV_IM_UNKNOWN_QUN_IM   0x0020
#define	QQ_RECV_IM_ADD_TO_QUN       0x0021
#define	QQ_RECV_IM_DEL_FROM_QUN     0x0022
#define	QQ_RECV_IM_APPLY_ADD_TO_QUN 0x0023
#define	QQ_RECV_IM_APPROVE_APPLY_ADD_TO_QUN 0x0024
#define	QQ_RECV_IM_REJCT_APPLY_ADD_TO_QUN  0x0025
#define	QQ_RECV_IM_CREATE_QUN       0x0026
#define	QQ_RECV_IM_TEMP_QUN_IM      0x002A
#define	QQ_RECV_IM_QUN_IM           0x002B
#define	QQ_RECV_IM_QUN_IM_09        0x0052
#define	QQ_RECV_IM_SYS_NOTIFICATION 0x0030
#define	QQ_RECV_IM_BUDDY_0802       0x0084
#define	QQ_RECV_IM_QUN_MEMBER_IM    0x008C
#define	QQ_RECV_IM_WRITING          0x0079
#define	QQ_RECV_IM_BUDDY_09         0x0078
#define	QQ_RECV_IM_BUDDY_09SP1      0x00a6

typedef struct qqSession_s {
    unsigned long  lQq;                // QQ号码
    unsigned char  caKey[32];          // 密码
    unsigned char  caKey_Req[16];      // 请求密钥
    unsigned char  caMd5[16];
    unsigned char  caMd51[16];
    unsigned char  caKey0[16];         // Key0_auth
    unsigned char  caKey1[16];
    unsigned char  caKey2[16];
    unsigned char  caKey3[16];
    unsigned char  caKeyE5[16];        // 用来解密 0828的Key
    
    unsigned char  caSessionKey[16];   // Session Key
    unsigned long  lLastTime;          // 最后操作时间
    unsigned long  lSip;               // QQ使用的IP地址
    unsigned char  cFlags;             // 0--该QQ号不监控           2--该号码和密码人工输入    1--该号码自动收集  9--该号码异常，暂不监控
    unsigned char  cStatus;            // 0--未验证                 1--验证正确        8--解码不正确        9--验证错误         99--退出
    unsigned char  cExist;             // 1--数据已和表中同步       0--表中不存在              2--表中已存在，但需要同步
    unsigned char  cKeep;              // 1 暂时禁止QQ
    unsigned short nSend;              // 发送验证请求次数
    unsigned short nVersion;           // 客户端版本
    unsigned char  cExt;                //  
    unsigned char  cForbit;             // 1--需要阻断QQ
    unsigned short nComm;               // Cmsg == 1  0828    2  0030   获取SessionKey的方法
} qqSession;

// The Flags of qqKeepPkgBuf
#define NC_QQPKG_LOGIN      1
#define NC_QQPKG_REQ0826    2
#define NC_QQPKG_RES0826    3
#define NC_QQPKG_RES0828    4
#define NC_QQPKG_RES00E5    5
typedef struct qqKeepPkgBuf_s {
    unsigned long  lQq;
    unsigned char  cFlags;      // 
    unsigned char  cSave;       // 1--保存 0--未保存 2--内容修改  9--不需要保存
    unsigned short nLen;        // 内容长度
    unsigned long  lLastTime;   // 最后时间
    unsigned char  pkg[1500];   // 包含数据包头
} qqKeepPkgBuf;

typedef struct qqReqHead_s {
    unsigned char    cMark;       // 0x02
    unsigned short   nVersion;
    unsigned short   nComm;      // 命令
    unsigned short   nSeq;       // 序号
    unsigned long    lQq;        // QQ号
    unsigned char    cRev[11];   // 保留
} qqReqHead;


struct qqNchdr 
{
    uchar qq_start_flags ;
    //0x02 means qq protocol,1bytes
    uint2 qq_version ;
    //qq version, 2 bytes
    uint2 qq_cmd ;
    // qq command ,2bytes
    uint2 qq_sequence ;
    //qq sequence num,2 bytes
    uint4 qq_send_qqnum ;
} ;

static unsigned char replyPacket[] = {
	0x00, 0x95, 0x33, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8A, 0xE6, 0x82, 0xA8, 
	0xE7, 0x9A, 0x84, 0xE5, 0x8F, 0xB7, 0xE7, 0xA0, 0x81, 0xE5, 0x8F, 0xAF, 0xE8, 0x83, 0xBD, 0xE5, 
	0xAD, 0x98, 0xE5, 0x9C, 0xA8, 0xE5, 0xBC, 0x82, 0xE5, 0xB8, 0xB8, 0xE6, 0x83, 0x85, 0xE5, 0x86, 
	0xB5, 0xEF, 0xBC, 0x8C, 0xE5, 0xB7, 0xB2, 0xE5, 0x8F, 0x97, 0xE5, 0x88, 0xB0, 0xE9, 0x99, 0x90, 
	0xE5, 0x88, 0xB6, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 0xE4, 0xBF, 0x9D, 0xE6, 0x8A, 0xA4, 0xEF, 
	0xBC, 0x8C, 0xE9, 0x9C, 0x80, 0xE6, 0xBF, 0x80, 0xE6, 0xB4, 0xBB, 0xE5, 0x90, 0x8E, 0xE6, 0x89, 
	0x8D, 0xE8, 0x83, 0xBD, 0xE6, 0xAD, 0xA3, 0xE5, 0xB8, 0xB8, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 
	0xE3, 0x80, 0x82, 0xE6, 0xBF, 0x80, 0xE6, 0xB4, 0xBB, 0xE7, 0xBD, 0x91, 0xE5, 0x9D, 0x80, 0xEF, 
	0xBC, 0x9A, 0x0A, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6A, 0x69, 0x68, 0x75, 0x6F, 0x2E, 
	0x71, 0x71, 0x2E, 0x63, 0x6F, 0x6D, 0x0D, 0x00, 0x00
};

static unsigned char requestInfoPacket[] = 
{
	80, 0x00, 0x00, 0x01, 0x03, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x3C,
	0x00, 0x13, 
	0x68, 0x65, 0x61, 0x64, 0x74, 0x78, 0x74, 0x3D, 0x51, 0x51, 0x2F, 0x54, 0x4D, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 
	0x00, 0x24, 
	0x74, 0x69, 0x74, 0x6C, 0x65, 0x3D, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE9, 0x9C, 0x80, 0xE6, 0xBF, 0x80, 0xE6, 0xB4, 
	0xBB, 0xE5, 0x90, 0x8E, 0xE6, 0x89, 0x8D, 0xE8, 0x83, 0xBD, 0xE4, 0xBD, 0xBF, 0xE7, 0x94, 0xA8, 
	0x00, 0x95, 
	0x74, 0x78, 0x74, 0x31, 0x3D, 0xE5, 0xBE, 0x88, 0xE6, 0x8A, 0xB1, 0xE6, 0xAD, 0x89, 0xEF, 
	0xBC, 0x8C, 0xE6, 0x82, 0xA8, 0xE7, 0x9A, 0x84, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE6, 0x9A, 0x82, 0xE6, 0x97, 0xB6, 
	0xE4, 0xB8, 0x8D, 0xE8, 0x83, 0xBD, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 0xE3, 0x80, 0x82, 0xE5, 0xAE, 0x89, 0xE5, 0x85, 
	0xA8, 0xE4, 0xB8, 0xAD, 0xE5, 0xBF, 0x83, 0xE5, 0x90, 0xAF, 0xE7, 0x94, 0xA8, 0xE4, 0xBA, 0x86, 0xE9, 0x99, 0x90, 0xE5, 
	0x88, 0xB6, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 0xE7, 0x9A, 0x84, 0xE4, 0xBF, 0x9D, 0xE6, 0x8A, 0xA4, 0xE6, 0x8E, 0xAA, 
	0xE6, 0x96, 0xBD, 0xEF, 0xBC, 0x8C, 0xE8, 0xAF, 0xB7, 0xE7, 0xAB, 0x8B, 0xE5, 0x8D, 0xB3, 0xE7, 0x82, 0xB9, 0xE5, 0x87, 
	0xBB, 0xE2, 0x80, 0x9C, 0xE6, 0xBF, 0x80, 0xE6, 0xB4, 0xBB, 0xE2, 0x80, 0x9D, 0xE6, 0x8C, 0x89, 0xE9, 0x92, 0xAE, 0xE8, 
	0xA7, 0xA3, 0xE9, 0x99, 0xA4, 0xE9, 0x99, 0x90, 0xE5, 0x88, 0xB6, 0xE3, 0x80, 0x82, 
	0x00, 0x2A, 
	0x69, 0x63, 0x6F, 0x74, 0x78, 0x74, 0x3D, 0x73, 0x73, 0x5F, 0x68, 0x65, 0x6C, 0x70, 0x2C, 0xE4, 0xB8, 0xBA, 0xE4, 0xBB, 
	0x80, 0xE4, 0xB9, 0x88, 0xE8, 0xA6, 0x81, 0xE9, 0x99, 0x90, 0xE5, 0x88, 0xB6, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 0xEF, 
	0xBC, 0x9A, 
	0x00, 0xEB, 
	0x74, 0x78, 0x74, 0x33, 0x3D, 0xE5, 0xBD, 0x93, 0xE5, 0xAE, 0x89, 0xE5, 0x85, 0xA8, 0xE4, 0xB8, 0xAD, 0xE5, 0xBF, 0x83, 
	0xE5, 0x8F, 0x91, 0xE7, 0x8E, 0xB0, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE4, 0xBD, 0xBF, 0xE7, 0x94, 0xA8, 0xE5, 0xBC, 
	0x82, 0xE5, 0xB8, 0xB8, 0xE6, 0x97, 0xB6, 0xEF, 0xBC, 0x8C, 0xE5, 0xB0, 0x86, 0xE6, 0x9A, 0x82, 0xE6, 0x97, 0xB6, 0xE9, 
	0x99, 0x90, 0xE5, 0x88, 0xB6, 0xE4, 0xBD, 0xBF, 0xE7, 0x94, 0xA8, 0xEF, 0xBC, 0x8C, 0xE9, 0x9C, 0x80, 0xE6, 0xBF, 0x80,
	0xE6, 0xB4, 0xBB, 0xE5, 0x90, 0x8E, 0xE6, 0x89, 0x8D, 0xE8, 0x83, 0xBD, 0xE6, 0xAD, 0xA3, 0xE5, 0xB8, 0xB8, 0xE7, 0x99, 
	0xBB, 0xE5, 0xBD, 0x95, 0xE3, 0x80, 0x82, 0xE6, 0xAD, 0xA4, 0xE6, 0x8E, 0xAA, 0xE6, 0x96, 0xBD, 0xE8, 0x83, 0xBD, 0xE9, 
	0x98, 0xB2, 0xE6, 0xAD, 0xA2, 0xE7, 0x9B, 0x97, 0xE5, 0x8F, 0xB7, 0xE8, 0x80, 0x85, 0xE4, 0xBD, 0xBF, 0xE7, 0x94, 0xA8, 
	0xE6, 0x82, 0xA8, 0xE7, 0x9A, 0x84, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE4, 0xBB, 0x8E, 0xE4, 0xBA, 0x8B, 0xE9, 0x9D, 
	0x9E, 0xE6, 0xB3, 0x95, 0xE8, 0xA1, 0x8C, 0xE4, 0xB8, 0xBA, 0xE3, 0x80, 0x82, 0x3C, 0x54, 0x49, 0x54, 0x4C, 0x45, 0x3D, 
	0x22, 0xE4, 0xBA, 0x86, 0xE8, 0xA7, 0xA3, 0xE6, 0x9B, 0xB4, 0xE5, 0xA4, 0x9A, 0x22, 0x2C, 0x55, 0x52, 0x4C, 0x3D, 0x22, 
	0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6A, 0x69, 0x68, 0x75, 0x6F, 0x2E, 0x71, 0x71, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6F, 0x6E, 0x2E, 0x68, 0x74, 0x6D, 0x6C, 0x22, 0x3E, 
	0x00, 0x07, 
	0x62, 0x74, 0x66, 0x6F, 0x63, 0x3D, 0x32, 
	0x00, 0x0C, 
	0x62, 0x74, 0x31, 0x3D, 0xE5, 0x85, 0xB3, 0xE9, 0x97, 0xAD, 0x2C, 0x32, 
	0x00, 0x20, 
	0x62, 0x74, 0x32, 0x3D, 0xE6, 0xBF, 0x80, 0xE6, 0xB4, 0xBB, 0x2C, 0x33, 0x2C, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 
	0x69, 0x6D, 0x2E, 0x71, 0x71, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x6A, 0x68, 
	0x00, 0x16, 
	0x68, 0x65, 0x61, 0x64, 0x6C, 0x6F, 0x67, 0x6F, 0x3D, 0x73, 0x68, 0x69, 0x65, 0x6C, 0x64, 0x5F, 0x6E, 0x6F, 0x72, 0x6D, 
	0x61, 0x6C
};

static unsigned char pwderr_reply[] = 
{
	0x00, 0x79, 0x34, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6E, 0xE6, 0x82, 0xA8, 0xE8, 0xBE, 0x93, 0xE5, 
	0x85, 0xA5, 0xE7, 0x9A, 0x84, 0xE5, 0xAF, 0x86, 0xE7, 0xA0, 0x81, 0xE4, 0xB8, 0x8D, 0xE6, 0xAD, 0xA3, 0xE7, 0xA1, 0xAE, 
	0xEF, 0xBC, 0x8C, 0xE5, 0x8E, 0x9F, 0xE5, 0x9B, 0xA0, 0xE5, 0x8F, 0xAF, 0xE8, 0x83, 0xBD, 0xE6, 0x98, 0xAF, 0x3A, 0x0A, 
	0xE8, 0xAE, 0xB0, 0xE9, 0x94, 0x99, 0xE5, 0xAF, 0x86, 0xE7, 0xA0, 0x81, 0xEF, 0xBC, 0x9B, 0xE6, 0x9C, 0xAA, 0xE5, 0x8C, 
	0xBA, 0xE5, 0x88, 0x86, 0xE5, 0xAD, 0x97, 0xE6, 0xAF, 0x8D, 0xE5, 0xA4, 0xA7, 0xE5, 0xB0, 0x8F, 0xE5, 0x86, 0x99, 0xEF, 
	0xBC, 0x9B, 0xE6, 0x9C, 0xAA, 0xE5, 0xBC, 0x80, 0xE5, 0x90, 0xAF, 0xE5, 0xB0, 0x8F, 0xE9, 0x94, 0xAE, 0xE7, 0x9B, 0x98, 
	0xE3, 0x80, 0x82, 0x00, 0x00
};


static unsigned char expqq_pwderr_reply[] = 
{
	0x34, 0x01, 0x00, 0x00, 0x7A, 0x00, 0x01, 0x08, 0x26, 0x00, 0x00, 0x01, 0x02, 0x00, 0x70, 0xE6, 
	0x82, 0xA8, 0xE8, 0xBE, 0x93, 0xE5, 0x85, 0xA5, 0xE7, 0x9A, 0x84, 0xE5, 0xAF, 0x86, 0xE7, 0xA0, 
	0x81, 0xE4, 0xB8, 0x8D, 0xE6, 0xAD, 0xA3, 0xE7, 0xA1, 0xAE, 0xEF, 0xBC, 0x8C, 0xE5, 0x8E, 0x9F, 
	0xE5, 0x9B, 0xA0, 0xE5, 0x8F, 0xAF, 0xE8, 0x83, 0xBD, 0xE6, 0x98, 0xAF, 0xEF, 0xBC, 0x9A, 0x0A, 
	0xE8, 0xAE, 0xB0, 0xE9, 0x94, 0x99, 0xE5, 0xAF, 0x86, 0xE7, 0xA0, 0x81, 0xEF, 0xBC, 0x9B, 0xE6, 
	0x9C, 0xAA, 0xE5, 0x8C, 0xBA, 0xE5, 0x88, 0x86, 0xE5, 0xAD, 0x97, 0xE6, 0xAF, 0x8D, 0xE5, 0xA4, 
	0xA7, 0xE5, 0xB0, 0x8F, 0xE5, 0x86, 0x99, 0xEF, 0xBC, 0x9B, 0xE6, 0x9C, 0xAA, 0xE5, 0xBC, 0x80, 
	0xE5, 0x90, 0xAF, 0xE5, 0xB0, 0x8F, 0xE9, 0x94, 0xAE, 0xE7, 0x9B, 0x98, 0xE3, 0x80, 0x82
};


static unsigned char qq2012_active[] = 
{
	0x80, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC1, 0x00, 0x16, 0x68, 0x65, 0x61, 0x64, 0x74, 0x78, 0x74,
	0x3D, 0x51, 0x51, 0xE5, 0xAE, 0x89, 0xE5, 0x85, 0xA8, 0xE4, 0xB8, 0xAD, 0xE5, 0xBF, 0x83, 0x00,
	0x2A, 0x74, 0x69, 0x74, 0x6C, 0x65, 0x3D, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE9, 0x9C, 0x80,
	0xE8, 0xA7, 0xA3, 0xE9, 0x99, 0xA4, 0xE9, 0x99, 0x90, 0xE5, 0x88, 0xB6, 0xE5, 0x90, 0x8E, 0xE6,
	0x89, 0x8D, 0xE8, 0x83, 0xBD, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 0x01, 0x23, 0x74, 0x78, 0x74,
	0x31, 0x3D, 0xE5, 0xBE, 0x88, 0xE6, 0x8A, 0xB1, 0xE6, 0xAD, 0x89, 0xEF, 0xBC, 0x8C, 0xE6, 0x82,
	0xA8, 0xE7, 0x9A, 0x84, 0x51, 0x51, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE6, 0x9A, 0x82, 0xE6,
	0x97, 0xB6, 0xE4, 0xB8, 0x8D, 0xE8, 0x83, 0xBD, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 0xE3, 0x80,
	0x82, 0x0D, 0x0A, 0x20, 0x0D, 0x0A, 0xE7, 0x94, 0xB1, 0xE4, 0xBA, 0x8E, 0xE6, 0x82, 0xA8, 0xE7,
	0x9A, 0x84, 0xE7, 0xBD, 0x91, 0xE7, 0xBB, 0x9C, 0xE5, 0x9C, 0xB0, 0xE5, 0x9D, 0x80, 0xE5, 0x8F,
	0x91, 0xE7, 0x94, 0x9F, 0xE5, 0x8F, 0x98, 0xE5, 0x8C, 0x96, 0xEF, 0xBC, 0x8C, 0xE4, 0xB8, 0xBA,
	0xE4, 0xBA, 0x86, 0xE7, 0xA1, 0xAE, 0xE4, 0xBF, 0x9D, 0xE6, 0x82, 0xA8, 0xE7, 0x9A, 0x84, 0xE5,
	0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE5, 0xAE, 0x89, 0xE5, 0x85, 0xA8, 0xEF, 0xBC, 0x8C, 0x51, 0x51,
	0xE5, 0xAE, 0x89, 0xE5, 0x85, 0xA8, 0xE4, 0xB8, 0xAD, 0xE5, 0xBF, 0x83, 0xE5, 0x90, 0xAF, 0xE7,
	0x94, 0xA8, 0xE4, 0xBA, 0x86, 0xE4, 0xB8, 0xB4, 0xE6, 0x97, 0xB6, 0xE7, 0x99, 0xBB, 0xE5, 0xBD,
	0x95, 0xE9, 0x99, 0x90, 0xE5, 0x88, 0xB6, 0xEF, 0xBC, 0x8C, 0xE6, 0xAD, 0xA4, 0xE6, 0x8E, 0xAA,
	0xE6, 0x96, 0xBD, 0xE8, 0x83, 0xBD, 0xE9, 0x98, 0xB2, 0xE6, 0xAD, 0xA2, 0xE6, 0x82, 0xA8, 0xE7,
	0x9A, 0x84, 0xE5, 0xB8, 0x90, 0xE6, 0x88, 0xB7, 0xE8, 0xB5, 0x84, 0xE6, 0x96, 0x99, 0xE5, 0x92,
	0x8C, 0xE4, 0xB8, 0xAA, 0xE4, 0xBA, 0xBA, 0xE4, 0xBF, 0xA1, 0xE6, 0x81, 0xAF, 0xE8, 0xA2, 0xAB,
	0xE7, 0x9B, 0x97, 0xE5, 0x8F, 0x96, 0xE3, 0x80, 0x82, 0x0D, 0x0A, 0x0D, 0x0A, 0xE6, 0x82, 0xA8,
	0xE5, 0x8F, 0xAF, 0xE4, 0xBB, 0xA5, 0xE5, 0x9C, 0xA8, 0xE8, 0xA7, 0xA3, 0xE9, 0x99, 0xA4, 0xE9,
	0x99, 0x90, 0xE5, 0x88, 0xB6, 0xE5, 0x90, 0x8E, 0xE6, 0xAD, 0xA3, 0xE5, 0xB8, 0xB8, 0xE4, 0xBD,
	0xBF, 0xE7, 0x94, 0xA8, 0xE8, 0xAF, 0xA5, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE3, 0x80, 0x82,
	0x00, 0x3E, 0x62, 0x74, 0x31, 0x3D, 0xE8, 0xA7, 0xA3, 0xE9, 0x99, 0xA4, 0xE9, 0x99, 0x90, 0xE5,
	0x88, 0xB6, 0x2C, 0x33, 0x2C, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x61, 0x71, 0x2E, 0x71,
	0x71, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x63, 0x6E, 0x32, 0x2F, 0x61, 0x62, 0x6E, 0x6F, 0x72, 0x6D,
	0x61, 0x6C, 0x2F, 0x73, 0x61, 0x66, 0x65, 0x5F, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2F,
	0x00, 0x16, 0x68, 0x65, 0x61, 0x64, 0x6C, 0x6F, 0x67, 0x6F, 0x3D, 0x73, 0x68, 0x69, 0x65, 0x6C,
	0x64, 0x5F, 0x6E, 0x6F, 0x72, 0x6D, 0x61, 0x6C
};

/*

     80 00 00 01 03 00 00 00 00 00 00 00 00 00 00 00 
	 00 00 00 00 00 01 C1 
	 00 16 
	 68 65 61 64 74 78 74 3D 51 51 E5 AE 89 E5 85 A8 
	 E4 B8 AD E5 BF 83   // headtxt=QQ安全中心
	 
	 00 2A 
	 74 69 74 6C 65 3D E5 B8 90 E5 8F B7 E9 9C 80 E8 
	 A7 A3 E9 99 A4 E9 99 90 E5 88 B6 E5 90 8E E6 89 
	 8D E8 83 BD E7 99 BB E5 BD 95     // title=帐号需解除限制后才能登
	 
	 01 23   //  291
	 
	 74 78 74 31 3D E5 BE 88 E6 8A B1 E6 AD 89 EF BC 
	 8C E6 82 A8 E7 9A 84 51 51 E5 B8 90 E5 8F B7 E6 
	 9A 82 E6 97 B6 E4 B8 8D E8 83 BD E7 99 BB E5 BD
	 95 E3 80 82 0D 0A 20 0D 0A E7 94 B1 E4 BA 8E E6 
	 82 A8 E7 9A 84 E7 BD 91 E7 BB 9C E5 9C B0 E5 9D 
	 80 E5 8F 91 E7 94 9F E5 8F 98 E5 8C 96 EF BC 8C 
	 E4 B8 BA E4 BA 86 E7 A1 AE E4 BF 9D E6 82 A8 E7 
	 9A 84 E5 B8 90 E5 8F B7 E5 AE 89 E5 85 A8 EF BC 
	 8C 51 51 E5 AE 89 E5 85 A8 E4 B8 AD E5 BF 83 E5 
	 90 AF E7 
	 94 A8 E4 BA 86 E4 B8 B4 E6 97 B6 E7 99 BB E5 BD 
	 95 E9 99 90 E5 88 B6 EF BC 8C E6 AD A4 E6 8E AA 
	 E6 96 BD E8 83 BD E9 98 B2 E6 AD A2 E6 82 A8 E7 
	 9A 84 E5 B8 90 E6 88 B7 E8 B5 84 E6 96 99 E5 92 
	 8C E4 B8 AA E4 BA BA E4 BF A1 E6 81 AF E8 A2 AB 
	 E7 9B 97 E5 8F 96 E3 80 82 0D 0A 0D 0A E6 82 A8 
	 E5 8F AF E4 BB A5 E5 9C A8 E8 A7 A3 E9 99 A4 E9 
	 99 90 E5 88 B6 E5 90 8E E6 AD A3 E5 B8 B8 E4 BD 
	 BF E7 94 A8 E8 AF A5 E5 B8 90 E5 8F B7 E3 80 82 
	 
	 // txt1=很抱歉，您的QQ帐号暂时不能登录。<0D><0A> <0D><0A>由于您的网络地址发生变化，为了确保您的帐号安全，QQ安全中心启用了临时登录限制，此措施能防止您的帐户资料和个人信息被盗取。<0D><0A><0D><0A>您可以在解除限制后正常使用该帐号。
	 
	 00 3F     // 63个字节
	 62 74 31 3D E8 A7 A3 E9 99 A4 E9 99 90 E5 
	 88 B6 2C 33 2C 68 74 74 70 3A 2F 2F 61 71 2E 71 
	 71 2E 63 6F 6D 2F 63 6E 32 2F 61 62 6E 6F 72 6D 
	 61 6C 2F 61 62 6E 6F 72 6D 61 6C 5F 69 6E 64 65 78   // bt1=解除限制,3,http://aq.qq.com/cn2/abnormal/abnormal_index
	 00 16     // 22个字节
	 68 65 61 64 6C 6F 67 6F 3D 73 68 69 65 6C  64 5F 6E 6F 72 6D 61 6C    // headlogo=shield_normal

	 */

static unsigned char qq2012_activeb[] = 
{
	0x80, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC1, 0x00, 0x16, 0x68, 0x65, 0x61, 0x64, 0x74, 0x78, 0x74,
	0x3D, 0x51, 0x51, 0xE5, 0xAE, 0x89, 0xE5, 0x85, 0xA8, 0xE4, 0xB8, 0xAD, 0xE5, 0xBF, 0x83, 0x00,
	0x2A, 0x74, 0x69, 0x74, 0x6C, 0x65, 0x3D, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE9, 0x9C, 0x80,
	0xE8, 0xA7, 0xA3, 0xE9, 0x99, 0xA4, 0xE9, 0x99, 0x90, 0xE5, 0x88, 0xB6, 0xE5, 0x90, 0x8E, 0xE6,
	0x89, 0x8D, 0xE8, 0x83, 0xBD, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 0x01, 0x23, 0x74, 0x78, 0x74,
	0x31, 0x3D, 0xE5, 0xBE, 0x88, 0xE6, 0x8A, 0xB1, 0xE6, 0xAD, 0x89, 0xEF, 0xBC, 0x8C, 0xE6, 0x82,
	0xA8, 0xE7, 0x9A, 0x84, 0x51, 0x51, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE6, 0x9A, 0x82, 0xE6,
	0x97, 0xB6, 0xE4, 0xB8, 0x8D, 0xE8, 0x83, 0xBD, 0xE7, 0x99, 0xBB, 0xE5, 0xBD, 0x95, 0xE3, 0x80,
	0x82, 0x0D, 0x0A, 0x20, 0x0D, 0x0A, 0xE7, 0x94, 0xB1, 0xE4, 0xBA, 0x8E, 0xE6, 0x82, 0xA8, 0xE7,
	0x9A, 0x84, 0xE7, 0xBD, 0x91, 0xE7, 0xBB, 0x9C, 0xE5, 0x9C, 0xB0, 0xE5, 0x9D, 0x80, 0xE5, 0x8F,
	0x91, 0xE7, 0x94, 0x9F, 0xE5, 0x8F, 0x98, 0xE5, 0x8C, 0x96, 0xEF, 0xBC, 0x8C, 0xE4, 0xB8, 0xBA,
	0xE4, 0xBA, 0x86, 0xE7, 0xA1, 0xAE, 0xE4, 0xBF, 0x9D, 0xE6, 0x82, 0xA8, 0xE7, 0x9A, 0x84, 0xE5,
	0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE5, 0xAE, 0x89, 0xE5, 0x85, 0xA8, 0xEF, 0xBC, 0x8C, 0x51, 0x51,
	0xE5, 0xAE, 0x89, 0xE5, 0x85, 0xA8, 0xE4, 0xB8, 0xAD, 0xE5, 0xBF, 0x83, 0xE5, 0x90, 0xAF, 0xE7,
	0x94, 0xA8, 0xE4, 0xBA, 0x86, 0xE4, 0xB8, 0xB4, 0xE6, 0x97, 0xB6, 0xE7, 0x99, 0xBB, 0xE5, 0xBD,
	0x95, 0xE9, 0x99, 0x90, 0xE5, 0x88, 0xB6, 0xEF, 0xBC, 0x8C, 0xE6, 0xAD, 0xA4, 0xE6, 0x8E, 0xAA,
	0xE6, 0x96, 0xBD, 0xE8, 0x83, 0xBD, 0xE9, 0x98, 0xB2, 0xE6, 0xAD, 0xA2, 0xE6, 0x82, 0xA8, 0xE7,
	0x9A, 0x84, 0xE5, 0xB8, 0x90, 0xE6, 0x88, 0xB7, 0xE8, 0xB5, 0x84, 0xE6, 0x96, 0x99, 0xE5, 0x92,
	0x8C, 0xE4, 0xB8, 0xAA, 0xE4, 0xBA, 0xBA, 0xE4, 0xBF, 0xA1, 0xE6, 0x81, 0xAF, 0xE8, 0xA2, 0xAB,
	0xE7, 0x9B, 0x97, 0xE5, 0x8F, 0x96, 0xE3, 0x80, 0x82, 0x0D, 0x0A, 0x0D, 0x0A, 0xE6, 0x82, 0xA8,
	0xE5, 0x8F, 0xAF, 0xE4, 0xBB, 0xA5, 0xE5, 0x9C, 0xA8, 0xE8, 0xA7, 0xA3, 0xE9, 0x99, 0xA4, 0xE9,
	0x99, 0x90, 0xE5, 0x88, 0xB6, 0xE5, 0x90, 0x8E, 0xE6, 0xAD, 0xA3, 0xE5, 0xB8, 0xB8, 0xE4, 0xBD,
	0xBF, 0xE7, 0x94, 0xA8, 0xE8, 0xAF, 0xA5, 0xE5, 0xB8, 0x90, 0xE5, 0x8F, 0xB7, 0xE3, 0x80, 0x82,
	0x00, 0x3F, 0x62, 0x74, 0x31, 0x3D, 0xE8, 0xA7, 0xA3, 0xE9, 0x99, 0xA4, 0xE9, 0x99, 0x90, 0xE5,
	0x88, 0xB6, 0x2C, 0x33, 0x2C, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x61, 0x71, 0x2E, 0x71,
	0x71, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x63, 0x6E, 0x32, 0x2F, 0x61, 0x62, 0x6E, 0x6F, 0x72, 0x6D,
	0x61, 0x6C, 0x2F, 0x61, 0x62, 0x6E, 0x6F, 0x72, 0x6D, 0x61, 0x6C, 0x5F, 0x69, 0x6E, 0x64, 0x65, 0x78,
	0x00, 0x16, 0x68, 0x65, 0x61, 0x64, 0x6C, 0x6F, 0x67, 0x6F, 0x3D, 0x73, 0x68, 0x69, 0x65, 0x6C,
	0x64, 0x5F, 0x6E, 0x6F, 0x72, 0x6D, 0x61, 0x6C
};

#endif
