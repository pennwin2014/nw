/* soapStub.h
   Generated by gSOAP 2.8.2 from CallProc.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://auth.cqrcb.com"
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (7)
/* xsd:boolean */
enum xsd__boolean {xsd__boolean__false_ = 0, xsd__boolean__true_ = 1};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__ns1__getEmpName
#define SOAP_TYPE__ns1__getEmpName (8)
/* ns1:getEmpName */
struct _ns1__getEmpName
{
	char *empid;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__getEmpNameResponse
#define SOAP_TYPE__ns1__getEmpNameResponse (9)
/* ns1:getEmpNameResponse */
struct _ns1__getEmpNameResponse
{
	char *getEmpNameReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__isEmpExist
#define SOAP_TYPE__ns1__isEmpExist (10)
/* ns1:isEmpExist */
struct _ns1__isEmpExist
{
	char *empid;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__isEmpExistResponse
#define SOAP_TYPE__ns1__isEmpExistResponse (11)
/* ns1:isEmpExistResponse */
struct _ns1__isEmpExistResponse
{
	enum xsd__boolean isEmpExistReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE__ns1__isEmpByCertid
#define SOAP_TYPE__ns1__isEmpByCertid (12)
/* ns1:isEmpByCertid */
struct _ns1__isEmpByCertid
{
	char *certid;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__isEmpByCertidResponse
#define SOAP_TYPE__ns1__isEmpByCertidResponse (13)
/* ns1:isEmpByCertidResponse */
struct _ns1__isEmpByCertidResponse
{
	char *isEmpByCertidReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__isSysExist
#define SOAP_TYPE__ns1__isSysExist (14)
/* ns1:isSysExist */
struct _ns1__isSysExist
{
	char *sysid;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__isSysExistResponse
#define SOAP_TYPE__ns1__isSysExistResponse (15)
/* ns1:isSysExistResponse */
struct _ns1__isSysExistResponse
{
	enum xsd__boolean isSysExistReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE__ns1__newpass
#define SOAP_TYPE__ns1__newpass (16)
/* ns1:newpass */
struct _ns1__newpass
{
	char *instr;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newpassResponse
#define SOAP_TYPE__ns1__newpassResponse (17)
/* ns1:newpassResponse */
struct _ns1__newpassResponse
{
	char *newpassReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newquery
#define SOAP_TYPE__ns1__newquery (18)
/* ns1:newquery */
struct _ns1__newquery
{
	char *instr;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newqueryResponse
#define SOAP_TYPE__ns1__newqueryResponse (19)
/* ns1:newqueryResponse */
struct _ns1__newqueryResponse
{
	char *newqueryReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newfinger
#define SOAP_TYPE__ns1__newfinger (20)
/* ns1:newfinger */
struct _ns1__newfinger
{
	char *instr;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newfingerResponse
#define SOAP_TYPE__ns1__newfingerResponse (21)
/* ns1:newfingerResponse */
struct _ns1__newfingerResponse
{
	char *newfingerReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newmapping
#define SOAP_TYPE__ns1__newmapping (22)
/* ns1:newmapping */
struct _ns1__newmapping
{
	char *instr;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newmappingResponse
#define SOAP_TYPE__ns1__newmappingResponse (23)
/* ns1:newmappingResponse */
struct _ns1__newmappingResponse
{
	char *newmappingReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newcheck
#define SOAP_TYPE__ns1__newcheck (24)
/* ns1:newcheck */
struct _ns1__newcheck
{
	char *instr;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newcheckResponse
#define SOAP_TYPE__ns1__newcheckResponse (25)
/* ns1:newcheckResponse */
struct _ns1__newcheckResponse
{
	char *newcheckReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newcheck1
#define SOAP_TYPE__ns1__newcheck1 (26)
/* ns1:newcheck1 */
struct _ns1__newcheck1
{
	char *instr;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__newcheck1Response
#define SOAP_TYPE__ns1__newcheck1Response (27)
/* ns1:newcheck1Response */
struct _ns1__newcheck1Response
{
	char *newcheck1Return;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE___ns1__getEmpName
#define SOAP_TYPE___ns1__getEmpName (31)
/* Operation wrapper: */
struct __ns1__getEmpName
{
	struct _ns1__getEmpName *ns1__getEmpName;	/* optional element of type ns1:getEmpName */
};
#endif

#ifndef SOAP_TYPE___ns1__isEmpExist
#define SOAP_TYPE___ns1__isEmpExist (35)
/* Operation wrapper: */
struct __ns1__isEmpExist
{
	struct _ns1__isEmpExist *ns1__isEmpExist;	/* optional element of type ns1:isEmpExist */
};
#endif

#ifndef SOAP_TYPE___ns1__isEmpByCertid
#define SOAP_TYPE___ns1__isEmpByCertid (39)
/* Operation wrapper: */
struct __ns1__isEmpByCertid
{
	struct _ns1__isEmpByCertid *ns1__isEmpByCertid;	/* optional element of type ns1:isEmpByCertid */
};
#endif

#ifndef SOAP_TYPE___ns1__isSysExist
#define SOAP_TYPE___ns1__isSysExist (43)
/* Operation wrapper: */
struct __ns1__isSysExist
{
	struct _ns1__isSysExist *ns1__isSysExist;	/* optional element of type ns1:isSysExist */
};
#endif

#ifndef SOAP_TYPE___ns1__newpass
#define SOAP_TYPE___ns1__newpass (47)
/* Operation wrapper: */
struct __ns1__newpass
{
	struct _ns1__newpass *ns1__newpass;	/* optional element of type ns1:newpass */
};
#endif

#ifndef SOAP_TYPE___ns1__newquery
#define SOAP_TYPE___ns1__newquery (51)
/* Operation wrapper: */
struct __ns1__newquery
{
	struct _ns1__newquery *ns1__newquery;	/* optional element of type ns1:newquery */
};
#endif

#ifndef SOAP_TYPE___ns1__newfinger
#define SOAP_TYPE___ns1__newfinger (55)
/* Operation wrapper: */
struct __ns1__newfinger
{
	struct _ns1__newfinger *ns1__newfinger;	/* optional element of type ns1:newfinger */
};
#endif

#ifndef SOAP_TYPE___ns1__newmapping
#define SOAP_TYPE___ns1__newmapping (59)
/* Operation wrapper: */
struct __ns1__newmapping
{
	struct _ns1__newmapping *ns1__newmapping;	/* optional element of type ns1:newmapping */
};
#endif

#ifndef SOAP_TYPE___ns1__newcheck
#define SOAP_TYPE___ns1__newcheck (63)
/* Operation wrapper: */
struct __ns1__newcheck
{
	struct _ns1__newcheck *ns1__newcheck;	/* optional element of type ns1:newcheck */
};
#endif

#ifndef SOAP_TYPE___ns1__newcheck1
#define SOAP_TYPE___ns1__newcheck1 (67)
/* Operation wrapper: */
struct __ns1__newcheck1
{
	struct _ns1__newcheck1 *ns1__newcheck1;	/* optional element of type ns1:newcheck1 */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (68)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (69)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (71)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (74)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (75)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getEmpName(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__getEmpName *ns1__getEmpName, struct _ns1__getEmpNameResponse *ns1__getEmpNameResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__isEmpExist(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__isEmpExist *ns1__isEmpExist, struct _ns1__isEmpExistResponse *ns1__isEmpExistResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__isEmpByCertid(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__isEmpByCertid *ns1__isEmpByCertid, struct _ns1__isEmpByCertidResponse *ns1__isEmpByCertidResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__isSysExist(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__isSysExist *ns1__isSysExist, struct _ns1__isSysExistResponse *ns1__isSysExistResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__newpass(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__newpass *ns1__newpass, struct _ns1__newpassResponse *ns1__newpassResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__newquery(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__newquery *ns1__newquery, struct _ns1__newqueryResponse *ns1__newqueryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__newfinger(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__newfinger *ns1__newfinger, struct _ns1__newfingerResponse *ns1__newfingerResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__newmapping(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__newmapping *ns1__newmapping, struct _ns1__newmappingResponse *ns1__newmappingResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__newcheck(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__newcheck *ns1__newcheck, struct _ns1__newcheckResponse *ns1__newcheckResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__newcheck1(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__newcheck1 *ns1__newcheck1, struct _ns1__newcheck1Response *ns1__newcheck1Response);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
