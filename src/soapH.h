/* soapH.h
   Generated by gSOAP 2.8.2 from CallProc.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__boolean(struct soap*, enum xsd__boolean *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const enum xsd__boolean *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, enum xsd__boolean);
SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, enum xsd__boolean *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, enum xsd__boolean *);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_begin_send(soap) || soap_put_xsd__boolean(soap, data, "xsd:boolean", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const enum xsd__boolean *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, enum xsd__boolean *, const char*, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#endif

#ifndef SOAP_TYPE___ns1__newcheck1
#define SOAP_TYPE___ns1__newcheck1 (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__newcheck1(struct soap*, struct __ns1__newcheck1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__newcheck1(struct soap*, const struct __ns1__newcheck1 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__newcheck1(struct soap*, const char*, int, const struct __ns1__newcheck1 *, const char*);
SOAP_FMAC3 struct __ns1__newcheck1 * SOAP_FMAC4 soap_in___ns1__newcheck1(struct soap*, const char*, struct __ns1__newcheck1 *, const char*);

#ifndef soap_write___ns1__newcheck1
#define soap_write___ns1__newcheck1(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__newcheck1(soap, data), 0) || soap_put___ns1__newcheck1(soap, data, "-ns1:newcheck1", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__newcheck1(struct soap*, const struct __ns1__newcheck1 *, const char*, const char*);

#ifndef soap_read___ns1__newcheck1
#define soap_read___ns1__newcheck1(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__newcheck1(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__newcheck1 * SOAP_FMAC4 soap_get___ns1__newcheck1(struct soap*, struct __ns1__newcheck1 *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__newcheck
#define SOAP_TYPE___ns1__newcheck (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__newcheck(struct soap*, struct __ns1__newcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__newcheck(struct soap*, const struct __ns1__newcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__newcheck(struct soap*, const char*, int, const struct __ns1__newcheck *, const char*);
SOAP_FMAC3 struct __ns1__newcheck * SOAP_FMAC4 soap_in___ns1__newcheck(struct soap*, const char*, struct __ns1__newcheck *, const char*);

#ifndef soap_write___ns1__newcheck
#define soap_write___ns1__newcheck(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__newcheck(soap, data), 0) || soap_put___ns1__newcheck(soap, data, "-ns1:newcheck", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__newcheck(struct soap*, const struct __ns1__newcheck *, const char*, const char*);

#ifndef soap_read___ns1__newcheck
#define soap_read___ns1__newcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__newcheck(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__newcheck * SOAP_FMAC4 soap_get___ns1__newcheck(struct soap*, struct __ns1__newcheck *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__newmapping
#define SOAP_TYPE___ns1__newmapping (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__newmapping(struct soap*, struct __ns1__newmapping *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__newmapping(struct soap*, const struct __ns1__newmapping *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__newmapping(struct soap*, const char*, int, const struct __ns1__newmapping *, const char*);
SOAP_FMAC3 struct __ns1__newmapping * SOAP_FMAC4 soap_in___ns1__newmapping(struct soap*, const char*, struct __ns1__newmapping *, const char*);

#ifndef soap_write___ns1__newmapping
#define soap_write___ns1__newmapping(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__newmapping(soap, data), 0) || soap_put___ns1__newmapping(soap, data, "-ns1:newmapping", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__newmapping(struct soap*, const struct __ns1__newmapping *, const char*, const char*);

#ifndef soap_read___ns1__newmapping
#define soap_read___ns1__newmapping(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__newmapping(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__newmapping * SOAP_FMAC4 soap_get___ns1__newmapping(struct soap*, struct __ns1__newmapping *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__newfinger
#define SOAP_TYPE___ns1__newfinger (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__newfinger(struct soap*, struct __ns1__newfinger *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__newfinger(struct soap*, const struct __ns1__newfinger *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__newfinger(struct soap*, const char*, int, const struct __ns1__newfinger *, const char*);
SOAP_FMAC3 struct __ns1__newfinger * SOAP_FMAC4 soap_in___ns1__newfinger(struct soap*, const char*, struct __ns1__newfinger *, const char*);

#ifndef soap_write___ns1__newfinger
#define soap_write___ns1__newfinger(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__newfinger(soap, data), 0) || soap_put___ns1__newfinger(soap, data, "-ns1:newfinger", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__newfinger(struct soap*, const struct __ns1__newfinger *, const char*, const char*);

#ifndef soap_read___ns1__newfinger
#define soap_read___ns1__newfinger(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__newfinger(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__newfinger * SOAP_FMAC4 soap_get___ns1__newfinger(struct soap*, struct __ns1__newfinger *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__newquery
#define SOAP_TYPE___ns1__newquery (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__newquery(struct soap*, struct __ns1__newquery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__newquery(struct soap*, const struct __ns1__newquery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__newquery(struct soap*, const char*, int, const struct __ns1__newquery *, const char*);
SOAP_FMAC3 struct __ns1__newquery * SOAP_FMAC4 soap_in___ns1__newquery(struct soap*, const char*, struct __ns1__newquery *, const char*);

#ifndef soap_write___ns1__newquery
#define soap_write___ns1__newquery(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__newquery(soap, data), 0) || soap_put___ns1__newquery(soap, data, "-ns1:newquery", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__newquery(struct soap*, const struct __ns1__newquery *, const char*, const char*);

#ifndef soap_read___ns1__newquery
#define soap_read___ns1__newquery(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__newquery(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__newquery * SOAP_FMAC4 soap_get___ns1__newquery(struct soap*, struct __ns1__newquery *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__newpass
#define SOAP_TYPE___ns1__newpass (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__newpass(struct soap*, struct __ns1__newpass *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__newpass(struct soap*, const struct __ns1__newpass *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__newpass(struct soap*, const char*, int, const struct __ns1__newpass *, const char*);
SOAP_FMAC3 struct __ns1__newpass * SOAP_FMAC4 soap_in___ns1__newpass(struct soap*, const char*, struct __ns1__newpass *, const char*);

#ifndef soap_write___ns1__newpass
#define soap_write___ns1__newpass(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__newpass(soap, data), 0) || soap_put___ns1__newpass(soap, data, "-ns1:newpass", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__newpass(struct soap*, const struct __ns1__newpass *, const char*, const char*);

#ifndef soap_read___ns1__newpass
#define soap_read___ns1__newpass(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__newpass(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__newpass * SOAP_FMAC4 soap_get___ns1__newpass(struct soap*, struct __ns1__newpass *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__isSysExist
#define SOAP_TYPE___ns1__isSysExist (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__isSysExist(struct soap*, struct __ns1__isSysExist *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__isSysExist(struct soap*, const struct __ns1__isSysExist *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__isSysExist(struct soap*, const char*, int, const struct __ns1__isSysExist *, const char*);
SOAP_FMAC3 struct __ns1__isSysExist * SOAP_FMAC4 soap_in___ns1__isSysExist(struct soap*, const char*, struct __ns1__isSysExist *, const char*);

#ifndef soap_write___ns1__isSysExist
#define soap_write___ns1__isSysExist(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__isSysExist(soap, data), 0) || soap_put___ns1__isSysExist(soap, data, "-ns1:isSysExist", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__isSysExist(struct soap*, const struct __ns1__isSysExist *, const char*, const char*);

#ifndef soap_read___ns1__isSysExist
#define soap_read___ns1__isSysExist(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__isSysExist(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__isSysExist * SOAP_FMAC4 soap_get___ns1__isSysExist(struct soap*, struct __ns1__isSysExist *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__isEmpByCertid
#define SOAP_TYPE___ns1__isEmpByCertid (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__isEmpByCertid(struct soap*, struct __ns1__isEmpByCertid *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__isEmpByCertid(struct soap*, const struct __ns1__isEmpByCertid *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__isEmpByCertid(struct soap*, const char*, int, const struct __ns1__isEmpByCertid *, const char*);
SOAP_FMAC3 struct __ns1__isEmpByCertid * SOAP_FMAC4 soap_in___ns1__isEmpByCertid(struct soap*, const char*, struct __ns1__isEmpByCertid *, const char*);

#ifndef soap_write___ns1__isEmpByCertid
#define soap_write___ns1__isEmpByCertid(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__isEmpByCertid(soap, data), 0) || soap_put___ns1__isEmpByCertid(soap, data, "-ns1:isEmpByCertid", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__isEmpByCertid(struct soap*, const struct __ns1__isEmpByCertid *, const char*, const char*);

#ifndef soap_read___ns1__isEmpByCertid
#define soap_read___ns1__isEmpByCertid(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__isEmpByCertid(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__isEmpByCertid * SOAP_FMAC4 soap_get___ns1__isEmpByCertid(struct soap*, struct __ns1__isEmpByCertid *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__isEmpExist
#define SOAP_TYPE___ns1__isEmpExist (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__isEmpExist(struct soap*, struct __ns1__isEmpExist *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__isEmpExist(struct soap*, const struct __ns1__isEmpExist *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__isEmpExist(struct soap*, const char*, int, const struct __ns1__isEmpExist *, const char*);
SOAP_FMAC3 struct __ns1__isEmpExist * SOAP_FMAC4 soap_in___ns1__isEmpExist(struct soap*, const char*, struct __ns1__isEmpExist *, const char*);

#ifndef soap_write___ns1__isEmpExist
#define soap_write___ns1__isEmpExist(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__isEmpExist(soap, data), 0) || soap_put___ns1__isEmpExist(soap, data, "-ns1:isEmpExist", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__isEmpExist(struct soap*, const struct __ns1__isEmpExist *, const char*, const char*);

#ifndef soap_read___ns1__isEmpExist
#define soap_read___ns1__isEmpExist(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__isEmpExist(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__isEmpExist * SOAP_FMAC4 soap_get___ns1__isEmpExist(struct soap*, struct __ns1__isEmpExist *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__getEmpName
#define SOAP_TYPE___ns1__getEmpName (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getEmpName(struct soap*, struct __ns1__getEmpName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getEmpName(struct soap*, const struct __ns1__getEmpName *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getEmpName(struct soap*, const char*, int, const struct __ns1__getEmpName *, const char*);
SOAP_FMAC3 struct __ns1__getEmpName * SOAP_FMAC4 soap_in___ns1__getEmpName(struct soap*, const char*, struct __ns1__getEmpName *, const char*);

#ifndef soap_write___ns1__getEmpName
#define soap_write___ns1__getEmpName(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getEmpName(soap, data), 0) || soap_put___ns1__getEmpName(soap, data, "-ns1:getEmpName", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getEmpName(struct soap*, const struct __ns1__getEmpName *, const char*, const char*);

#ifndef soap_read___ns1__getEmpName
#define soap_read___ns1__getEmpName(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getEmpName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getEmpName * SOAP_FMAC4 soap_get___ns1__getEmpName(struct soap*, struct __ns1__getEmpName *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newcheck1Response
#define SOAP_TYPE__ns1__newcheck1Response (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newcheck1Response(struct soap*, struct _ns1__newcheck1Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newcheck1Response(struct soap*, const struct _ns1__newcheck1Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newcheck1Response(struct soap*, const char*, int, const struct _ns1__newcheck1Response *, const char*);
SOAP_FMAC3 struct _ns1__newcheck1Response * SOAP_FMAC4 soap_in__ns1__newcheck1Response(struct soap*, const char*, struct _ns1__newcheck1Response *, const char*);

#ifndef soap_write__ns1__newcheck1Response
#define soap_write__ns1__newcheck1Response(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newcheck1Response(soap, data), 0) || soap_put__ns1__newcheck1Response(soap, data, "ns1:newcheck1Response", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newcheck1Response(struct soap*, const struct _ns1__newcheck1Response *, const char*, const char*);

#ifndef soap_read__ns1__newcheck1Response
#define soap_read__ns1__newcheck1Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newcheck1Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newcheck1Response * SOAP_FMAC4 soap_get__ns1__newcheck1Response(struct soap*, struct _ns1__newcheck1Response *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newcheck1
#define SOAP_TYPE__ns1__newcheck1 (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newcheck1(struct soap*, struct _ns1__newcheck1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newcheck1(struct soap*, const struct _ns1__newcheck1 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newcheck1(struct soap*, const char*, int, const struct _ns1__newcheck1 *, const char*);
SOAP_FMAC3 struct _ns1__newcheck1 * SOAP_FMAC4 soap_in__ns1__newcheck1(struct soap*, const char*, struct _ns1__newcheck1 *, const char*);

#ifndef soap_write__ns1__newcheck1
#define soap_write__ns1__newcheck1(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newcheck1(soap, data), 0) || soap_put__ns1__newcheck1(soap, data, "ns1:newcheck1", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newcheck1(struct soap*, const struct _ns1__newcheck1 *, const char*, const char*);

#ifndef soap_read__ns1__newcheck1
#define soap_read__ns1__newcheck1(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newcheck1(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newcheck1 * SOAP_FMAC4 soap_get__ns1__newcheck1(struct soap*, struct _ns1__newcheck1 *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newcheckResponse
#define SOAP_TYPE__ns1__newcheckResponse (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newcheckResponse(struct soap*, struct _ns1__newcheckResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newcheckResponse(struct soap*, const struct _ns1__newcheckResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newcheckResponse(struct soap*, const char*, int, const struct _ns1__newcheckResponse *, const char*);
SOAP_FMAC3 struct _ns1__newcheckResponse * SOAP_FMAC4 soap_in__ns1__newcheckResponse(struct soap*, const char*, struct _ns1__newcheckResponse *, const char*);

#ifndef soap_write__ns1__newcheckResponse
#define soap_write__ns1__newcheckResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newcheckResponse(soap, data), 0) || soap_put__ns1__newcheckResponse(soap, data, "ns1:newcheckResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newcheckResponse(struct soap*, const struct _ns1__newcheckResponse *, const char*, const char*);

#ifndef soap_read__ns1__newcheckResponse
#define soap_read__ns1__newcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newcheckResponse * SOAP_FMAC4 soap_get__ns1__newcheckResponse(struct soap*, struct _ns1__newcheckResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newcheck
#define SOAP_TYPE__ns1__newcheck (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newcheck(struct soap*, struct _ns1__newcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newcheck(struct soap*, const struct _ns1__newcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newcheck(struct soap*, const char*, int, const struct _ns1__newcheck *, const char*);
SOAP_FMAC3 struct _ns1__newcheck * SOAP_FMAC4 soap_in__ns1__newcheck(struct soap*, const char*, struct _ns1__newcheck *, const char*);

#ifndef soap_write__ns1__newcheck
#define soap_write__ns1__newcheck(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newcheck(soap, data), 0) || soap_put__ns1__newcheck(soap, data, "ns1:newcheck", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newcheck(struct soap*, const struct _ns1__newcheck *, const char*, const char*);

#ifndef soap_read__ns1__newcheck
#define soap_read__ns1__newcheck(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newcheck(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newcheck * SOAP_FMAC4 soap_get__ns1__newcheck(struct soap*, struct _ns1__newcheck *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newmappingResponse
#define SOAP_TYPE__ns1__newmappingResponse (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newmappingResponse(struct soap*, struct _ns1__newmappingResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newmappingResponse(struct soap*, const struct _ns1__newmappingResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newmappingResponse(struct soap*, const char*, int, const struct _ns1__newmappingResponse *, const char*);
SOAP_FMAC3 struct _ns1__newmappingResponse * SOAP_FMAC4 soap_in__ns1__newmappingResponse(struct soap*, const char*, struct _ns1__newmappingResponse *, const char*);

#ifndef soap_write__ns1__newmappingResponse
#define soap_write__ns1__newmappingResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newmappingResponse(soap, data), 0) || soap_put__ns1__newmappingResponse(soap, data, "ns1:newmappingResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newmappingResponse(struct soap*, const struct _ns1__newmappingResponse *, const char*, const char*);

#ifndef soap_read__ns1__newmappingResponse
#define soap_read__ns1__newmappingResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newmappingResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newmappingResponse * SOAP_FMAC4 soap_get__ns1__newmappingResponse(struct soap*, struct _ns1__newmappingResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newmapping
#define SOAP_TYPE__ns1__newmapping (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newmapping(struct soap*, struct _ns1__newmapping *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newmapping(struct soap*, const struct _ns1__newmapping *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newmapping(struct soap*, const char*, int, const struct _ns1__newmapping *, const char*);
SOAP_FMAC3 struct _ns1__newmapping * SOAP_FMAC4 soap_in__ns1__newmapping(struct soap*, const char*, struct _ns1__newmapping *, const char*);

#ifndef soap_write__ns1__newmapping
#define soap_write__ns1__newmapping(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newmapping(soap, data), 0) || soap_put__ns1__newmapping(soap, data, "ns1:newmapping", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newmapping(struct soap*, const struct _ns1__newmapping *, const char*, const char*);

#ifndef soap_read__ns1__newmapping
#define soap_read__ns1__newmapping(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newmapping(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newmapping * SOAP_FMAC4 soap_get__ns1__newmapping(struct soap*, struct _ns1__newmapping *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newfingerResponse
#define SOAP_TYPE__ns1__newfingerResponse (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newfingerResponse(struct soap*, struct _ns1__newfingerResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newfingerResponse(struct soap*, const struct _ns1__newfingerResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newfingerResponse(struct soap*, const char*, int, const struct _ns1__newfingerResponse *, const char*);
SOAP_FMAC3 struct _ns1__newfingerResponse * SOAP_FMAC4 soap_in__ns1__newfingerResponse(struct soap*, const char*, struct _ns1__newfingerResponse *, const char*);

#ifndef soap_write__ns1__newfingerResponse
#define soap_write__ns1__newfingerResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newfingerResponse(soap, data), 0) || soap_put__ns1__newfingerResponse(soap, data, "ns1:newfingerResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newfingerResponse(struct soap*, const struct _ns1__newfingerResponse *, const char*, const char*);

#ifndef soap_read__ns1__newfingerResponse
#define soap_read__ns1__newfingerResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newfingerResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newfingerResponse * SOAP_FMAC4 soap_get__ns1__newfingerResponse(struct soap*, struct _ns1__newfingerResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newfinger
#define SOAP_TYPE__ns1__newfinger (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newfinger(struct soap*, struct _ns1__newfinger *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newfinger(struct soap*, const struct _ns1__newfinger *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newfinger(struct soap*, const char*, int, const struct _ns1__newfinger *, const char*);
SOAP_FMAC3 struct _ns1__newfinger * SOAP_FMAC4 soap_in__ns1__newfinger(struct soap*, const char*, struct _ns1__newfinger *, const char*);

#ifndef soap_write__ns1__newfinger
#define soap_write__ns1__newfinger(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newfinger(soap, data), 0) || soap_put__ns1__newfinger(soap, data, "ns1:newfinger", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newfinger(struct soap*, const struct _ns1__newfinger *, const char*, const char*);

#ifndef soap_read__ns1__newfinger
#define soap_read__ns1__newfinger(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newfinger(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newfinger * SOAP_FMAC4 soap_get__ns1__newfinger(struct soap*, struct _ns1__newfinger *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newqueryResponse
#define SOAP_TYPE__ns1__newqueryResponse (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newqueryResponse(struct soap*, struct _ns1__newqueryResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newqueryResponse(struct soap*, const struct _ns1__newqueryResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newqueryResponse(struct soap*, const char*, int, const struct _ns1__newqueryResponse *, const char*);
SOAP_FMAC3 struct _ns1__newqueryResponse * SOAP_FMAC4 soap_in__ns1__newqueryResponse(struct soap*, const char*, struct _ns1__newqueryResponse *, const char*);

#ifndef soap_write__ns1__newqueryResponse
#define soap_write__ns1__newqueryResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newqueryResponse(soap, data), 0) || soap_put__ns1__newqueryResponse(soap, data, "ns1:newqueryResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newqueryResponse(struct soap*, const struct _ns1__newqueryResponse *, const char*, const char*);

#ifndef soap_read__ns1__newqueryResponse
#define soap_read__ns1__newqueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newqueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newqueryResponse * SOAP_FMAC4 soap_get__ns1__newqueryResponse(struct soap*, struct _ns1__newqueryResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newquery
#define SOAP_TYPE__ns1__newquery (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newquery(struct soap*, struct _ns1__newquery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newquery(struct soap*, const struct _ns1__newquery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newquery(struct soap*, const char*, int, const struct _ns1__newquery *, const char*);
SOAP_FMAC3 struct _ns1__newquery * SOAP_FMAC4 soap_in__ns1__newquery(struct soap*, const char*, struct _ns1__newquery *, const char*);

#ifndef soap_write__ns1__newquery
#define soap_write__ns1__newquery(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newquery(soap, data), 0) || soap_put__ns1__newquery(soap, data, "ns1:newquery", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newquery(struct soap*, const struct _ns1__newquery *, const char*, const char*);

#ifndef soap_read__ns1__newquery
#define soap_read__ns1__newquery(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newquery(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newquery * SOAP_FMAC4 soap_get__ns1__newquery(struct soap*, struct _ns1__newquery *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newpassResponse
#define SOAP_TYPE__ns1__newpassResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newpassResponse(struct soap*, struct _ns1__newpassResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newpassResponse(struct soap*, const struct _ns1__newpassResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newpassResponse(struct soap*, const char*, int, const struct _ns1__newpassResponse *, const char*);
SOAP_FMAC3 struct _ns1__newpassResponse * SOAP_FMAC4 soap_in__ns1__newpassResponse(struct soap*, const char*, struct _ns1__newpassResponse *, const char*);

#ifndef soap_write__ns1__newpassResponse
#define soap_write__ns1__newpassResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newpassResponse(soap, data), 0) || soap_put__ns1__newpassResponse(soap, data, "ns1:newpassResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newpassResponse(struct soap*, const struct _ns1__newpassResponse *, const char*, const char*);

#ifndef soap_read__ns1__newpassResponse
#define soap_read__ns1__newpassResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newpassResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newpassResponse * SOAP_FMAC4 soap_get__ns1__newpassResponse(struct soap*, struct _ns1__newpassResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__newpass
#define SOAP_TYPE__ns1__newpass (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__newpass(struct soap*, struct _ns1__newpass *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__newpass(struct soap*, const struct _ns1__newpass *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__newpass(struct soap*, const char*, int, const struct _ns1__newpass *, const char*);
SOAP_FMAC3 struct _ns1__newpass * SOAP_FMAC4 soap_in__ns1__newpass(struct soap*, const char*, struct _ns1__newpass *, const char*);

#ifndef soap_write__ns1__newpass
#define soap_write__ns1__newpass(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__newpass(soap, data), 0) || soap_put__ns1__newpass(soap, data, "ns1:newpass", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__newpass(struct soap*, const struct _ns1__newpass *, const char*, const char*);

#ifndef soap_read__ns1__newpass
#define soap_read__ns1__newpass(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__newpass(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newpass * SOAP_FMAC4 soap_get__ns1__newpass(struct soap*, struct _ns1__newpass *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__isSysExistResponse
#define SOAP_TYPE__ns1__isSysExistResponse (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__isSysExistResponse(struct soap*, struct _ns1__isSysExistResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__isSysExistResponse(struct soap*, const struct _ns1__isSysExistResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__isSysExistResponse(struct soap*, const char*, int, const struct _ns1__isSysExistResponse *, const char*);
SOAP_FMAC3 struct _ns1__isSysExistResponse * SOAP_FMAC4 soap_in__ns1__isSysExistResponse(struct soap*, const char*, struct _ns1__isSysExistResponse *, const char*);

#ifndef soap_write__ns1__isSysExistResponse
#define soap_write__ns1__isSysExistResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__isSysExistResponse(soap, data), 0) || soap_put__ns1__isSysExistResponse(soap, data, "ns1:isSysExistResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__isSysExistResponse(struct soap*, const struct _ns1__isSysExistResponse *, const char*, const char*);

#ifndef soap_read__ns1__isSysExistResponse
#define soap_read__ns1__isSysExistResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__isSysExistResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isSysExistResponse * SOAP_FMAC4 soap_get__ns1__isSysExistResponse(struct soap*, struct _ns1__isSysExistResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__isSysExist
#define SOAP_TYPE__ns1__isSysExist (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__isSysExist(struct soap*, struct _ns1__isSysExist *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__isSysExist(struct soap*, const struct _ns1__isSysExist *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__isSysExist(struct soap*, const char*, int, const struct _ns1__isSysExist *, const char*);
SOAP_FMAC3 struct _ns1__isSysExist * SOAP_FMAC4 soap_in__ns1__isSysExist(struct soap*, const char*, struct _ns1__isSysExist *, const char*);

#ifndef soap_write__ns1__isSysExist
#define soap_write__ns1__isSysExist(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__isSysExist(soap, data), 0) || soap_put__ns1__isSysExist(soap, data, "ns1:isSysExist", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__isSysExist(struct soap*, const struct _ns1__isSysExist *, const char*, const char*);

#ifndef soap_read__ns1__isSysExist
#define soap_read__ns1__isSysExist(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__isSysExist(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isSysExist * SOAP_FMAC4 soap_get__ns1__isSysExist(struct soap*, struct _ns1__isSysExist *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__isEmpByCertidResponse
#define SOAP_TYPE__ns1__isEmpByCertidResponse (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__isEmpByCertidResponse(struct soap*, struct _ns1__isEmpByCertidResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__isEmpByCertidResponse(struct soap*, const struct _ns1__isEmpByCertidResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__isEmpByCertidResponse(struct soap*, const char*, int, const struct _ns1__isEmpByCertidResponse *, const char*);
SOAP_FMAC3 struct _ns1__isEmpByCertidResponse * SOAP_FMAC4 soap_in__ns1__isEmpByCertidResponse(struct soap*, const char*, struct _ns1__isEmpByCertidResponse *, const char*);

#ifndef soap_write__ns1__isEmpByCertidResponse
#define soap_write__ns1__isEmpByCertidResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__isEmpByCertidResponse(soap, data), 0) || soap_put__ns1__isEmpByCertidResponse(soap, data, "ns1:isEmpByCertidResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__isEmpByCertidResponse(struct soap*, const struct _ns1__isEmpByCertidResponse *, const char*, const char*);

#ifndef soap_read__ns1__isEmpByCertidResponse
#define soap_read__ns1__isEmpByCertidResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__isEmpByCertidResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isEmpByCertidResponse * SOAP_FMAC4 soap_get__ns1__isEmpByCertidResponse(struct soap*, struct _ns1__isEmpByCertidResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__isEmpByCertid
#define SOAP_TYPE__ns1__isEmpByCertid (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__isEmpByCertid(struct soap*, struct _ns1__isEmpByCertid *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__isEmpByCertid(struct soap*, const struct _ns1__isEmpByCertid *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__isEmpByCertid(struct soap*, const char*, int, const struct _ns1__isEmpByCertid *, const char*);
SOAP_FMAC3 struct _ns1__isEmpByCertid * SOAP_FMAC4 soap_in__ns1__isEmpByCertid(struct soap*, const char*, struct _ns1__isEmpByCertid *, const char*);

#ifndef soap_write__ns1__isEmpByCertid
#define soap_write__ns1__isEmpByCertid(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__isEmpByCertid(soap, data), 0) || soap_put__ns1__isEmpByCertid(soap, data, "ns1:isEmpByCertid", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__isEmpByCertid(struct soap*, const struct _ns1__isEmpByCertid *, const char*, const char*);

#ifndef soap_read__ns1__isEmpByCertid
#define soap_read__ns1__isEmpByCertid(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__isEmpByCertid(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isEmpByCertid * SOAP_FMAC4 soap_get__ns1__isEmpByCertid(struct soap*, struct _ns1__isEmpByCertid *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__isEmpExistResponse
#define SOAP_TYPE__ns1__isEmpExistResponse (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__isEmpExistResponse(struct soap*, struct _ns1__isEmpExistResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__isEmpExistResponse(struct soap*, const struct _ns1__isEmpExistResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__isEmpExistResponse(struct soap*, const char*, int, const struct _ns1__isEmpExistResponse *, const char*);
SOAP_FMAC3 struct _ns1__isEmpExistResponse * SOAP_FMAC4 soap_in__ns1__isEmpExistResponse(struct soap*, const char*, struct _ns1__isEmpExistResponse *, const char*);

#ifndef soap_write__ns1__isEmpExistResponse
#define soap_write__ns1__isEmpExistResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__isEmpExistResponse(soap, data), 0) || soap_put__ns1__isEmpExistResponse(soap, data, "ns1:isEmpExistResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__isEmpExistResponse(struct soap*, const struct _ns1__isEmpExistResponse *, const char*, const char*);

#ifndef soap_read__ns1__isEmpExistResponse
#define soap_read__ns1__isEmpExistResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__isEmpExistResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isEmpExistResponse * SOAP_FMAC4 soap_get__ns1__isEmpExistResponse(struct soap*, struct _ns1__isEmpExistResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__isEmpExist
#define SOAP_TYPE__ns1__isEmpExist (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__isEmpExist(struct soap*, struct _ns1__isEmpExist *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__isEmpExist(struct soap*, const struct _ns1__isEmpExist *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__isEmpExist(struct soap*, const char*, int, const struct _ns1__isEmpExist *, const char*);
SOAP_FMAC3 struct _ns1__isEmpExist * SOAP_FMAC4 soap_in__ns1__isEmpExist(struct soap*, const char*, struct _ns1__isEmpExist *, const char*);

#ifndef soap_write__ns1__isEmpExist
#define soap_write__ns1__isEmpExist(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__isEmpExist(soap, data), 0) || soap_put__ns1__isEmpExist(soap, data, "ns1:isEmpExist", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__isEmpExist(struct soap*, const struct _ns1__isEmpExist *, const char*, const char*);

#ifndef soap_read__ns1__isEmpExist
#define soap_read__ns1__isEmpExist(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__isEmpExist(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isEmpExist * SOAP_FMAC4 soap_get__ns1__isEmpExist(struct soap*, struct _ns1__isEmpExist *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__getEmpNameResponse
#define SOAP_TYPE__ns1__getEmpNameResponse (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__getEmpNameResponse(struct soap*, struct _ns1__getEmpNameResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__getEmpNameResponse(struct soap*, const struct _ns1__getEmpNameResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getEmpNameResponse(struct soap*, const char*, int, const struct _ns1__getEmpNameResponse *, const char*);
SOAP_FMAC3 struct _ns1__getEmpNameResponse * SOAP_FMAC4 soap_in__ns1__getEmpNameResponse(struct soap*, const char*, struct _ns1__getEmpNameResponse *, const char*);

#ifndef soap_write__ns1__getEmpNameResponse
#define soap_write__ns1__getEmpNameResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__getEmpNameResponse(soap, data), 0) || soap_put__ns1__getEmpNameResponse(soap, data, "ns1:getEmpNameResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__getEmpNameResponse(struct soap*, const struct _ns1__getEmpNameResponse *, const char*, const char*);

#ifndef soap_read__ns1__getEmpNameResponse
#define soap_read__ns1__getEmpNameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getEmpNameResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getEmpNameResponse * SOAP_FMAC4 soap_get__ns1__getEmpNameResponse(struct soap*, struct _ns1__getEmpNameResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__getEmpName
#define SOAP_TYPE__ns1__getEmpName (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__getEmpName(struct soap*, struct _ns1__getEmpName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__getEmpName(struct soap*, const struct _ns1__getEmpName *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getEmpName(struct soap*, const char*, int, const struct _ns1__getEmpName *, const char*);
SOAP_FMAC3 struct _ns1__getEmpName * SOAP_FMAC4 soap_in__ns1__getEmpName(struct soap*, const char*, struct _ns1__getEmpName *, const char*);

#ifndef soap_write__ns1__getEmpName
#define soap_write__ns1__getEmpName(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__getEmpName(soap, data), 0) || soap_put__ns1__getEmpName(soap, data, "ns1:getEmpName", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__getEmpName(struct soap*, const struct _ns1__getEmpName *, const char*, const char*);

#ifndef soap_read__ns1__getEmpName
#define soap_read__ns1__getEmpName(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getEmpName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getEmpName * SOAP_FMAC4 soap_get__ns1__getEmpName(struct soap*, struct _ns1__getEmpName *, const char*, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__newcheck1Response
#define SOAP_TYPE_PointerTo_ns1__newcheck1Response (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newcheck1Response(struct soap*, struct _ns1__newcheck1Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newcheck1Response(struct soap*, const char *, int, struct _ns1__newcheck1Response *const*, const char *);
SOAP_FMAC3 struct _ns1__newcheck1Response ** SOAP_FMAC4 soap_in_PointerTo_ns1__newcheck1Response(struct soap*, const char*, struct _ns1__newcheck1Response **, const char*);

#ifndef soap_write_PointerTo_ns1__newcheck1Response
#define soap_write_PointerTo_ns1__newcheck1Response(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newcheck1Response(soap, data), 0) || soap_put_PointerTo_ns1__newcheck1Response(soap, data, "ns1:newcheck1Response", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newcheck1Response(struct soap*, struct _ns1__newcheck1Response *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newcheck1Response
#define soap_read_PointerTo_ns1__newcheck1Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newcheck1Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newcheck1Response ** SOAP_FMAC4 soap_get_PointerTo_ns1__newcheck1Response(struct soap*, struct _ns1__newcheck1Response **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newcheck1
#define SOAP_TYPE_PointerTo_ns1__newcheck1 (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newcheck1(struct soap*, struct _ns1__newcheck1 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newcheck1(struct soap*, const char *, int, struct _ns1__newcheck1 *const*, const char *);
SOAP_FMAC3 struct _ns1__newcheck1 ** SOAP_FMAC4 soap_in_PointerTo_ns1__newcheck1(struct soap*, const char*, struct _ns1__newcheck1 **, const char*);

#ifndef soap_write_PointerTo_ns1__newcheck1
#define soap_write_PointerTo_ns1__newcheck1(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newcheck1(soap, data), 0) || soap_put_PointerTo_ns1__newcheck1(soap, data, "ns1:newcheck1", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newcheck1(struct soap*, struct _ns1__newcheck1 *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newcheck1
#define soap_read_PointerTo_ns1__newcheck1(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newcheck1(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newcheck1 ** SOAP_FMAC4 soap_get_PointerTo_ns1__newcheck1(struct soap*, struct _ns1__newcheck1 **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newcheckResponse
#define SOAP_TYPE_PointerTo_ns1__newcheckResponse (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newcheckResponse(struct soap*, struct _ns1__newcheckResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newcheckResponse(struct soap*, const char *, int, struct _ns1__newcheckResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__newcheckResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__newcheckResponse(struct soap*, const char*, struct _ns1__newcheckResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__newcheckResponse
#define soap_write_PointerTo_ns1__newcheckResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newcheckResponse(soap, data), 0) || soap_put_PointerTo_ns1__newcheckResponse(soap, data, "ns1:newcheckResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newcheckResponse(struct soap*, struct _ns1__newcheckResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newcheckResponse
#define soap_read_PointerTo_ns1__newcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newcheckResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__newcheckResponse(struct soap*, struct _ns1__newcheckResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newcheck
#define SOAP_TYPE_PointerTo_ns1__newcheck (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newcheck(struct soap*, struct _ns1__newcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newcheck(struct soap*, const char *, int, struct _ns1__newcheck *const*, const char *);
SOAP_FMAC3 struct _ns1__newcheck ** SOAP_FMAC4 soap_in_PointerTo_ns1__newcheck(struct soap*, const char*, struct _ns1__newcheck **, const char*);

#ifndef soap_write_PointerTo_ns1__newcheck
#define soap_write_PointerTo_ns1__newcheck(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newcheck(soap, data), 0) || soap_put_PointerTo_ns1__newcheck(soap, data, "ns1:newcheck", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newcheck(struct soap*, struct _ns1__newcheck *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newcheck
#define soap_read_PointerTo_ns1__newcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newcheck(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newcheck ** SOAP_FMAC4 soap_get_PointerTo_ns1__newcheck(struct soap*, struct _ns1__newcheck **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newmappingResponse
#define SOAP_TYPE_PointerTo_ns1__newmappingResponse (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newmappingResponse(struct soap*, struct _ns1__newmappingResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newmappingResponse(struct soap*, const char *, int, struct _ns1__newmappingResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__newmappingResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__newmappingResponse(struct soap*, const char*, struct _ns1__newmappingResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__newmappingResponse
#define soap_write_PointerTo_ns1__newmappingResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newmappingResponse(soap, data), 0) || soap_put_PointerTo_ns1__newmappingResponse(soap, data, "ns1:newmappingResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newmappingResponse(struct soap*, struct _ns1__newmappingResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newmappingResponse
#define soap_read_PointerTo_ns1__newmappingResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newmappingResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newmappingResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__newmappingResponse(struct soap*, struct _ns1__newmappingResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newmapping
#define SOAP_TYPE_PointerTo_ns1__newmapping (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newmapping(struct soap*, struct _ns1__newmapping *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newmapping(struct soap*, const char *, int, struct _ns1__newmapping *const*, const char *);
SOAP_FMAC3 struct _ns1__newmapping ** SOAP_FMAC4 soap_in_PointerTo_ns1__newmapping(struct soap*, const char*, struct _ns1__newmapping **, const char*);

#ifndef soap_write_PointerTo_ns1__newmapping
#define soap_write_PointerTo_ns1__newmapping(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newmapping(soap, data), 0) || soap_put_PointerTo_ns1__newmapping(soap, data, "ns1:newmapping", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newmapping(struct soap*, struct _ns1__newmapping *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newmapping
#define soap_read_PointerTo_ns1__newmapping(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newmapping(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newmapping ** SOAP_FMAC4 soap_get_PointerTo_ns1__newmapping(struct soap*, struct _ns1__newmapping **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newfingerResponse
#define SOAP_TYPE_PointerTo_ns1__newfingerResponse (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newfingerResponse(struct soap*, struct _ns1__newfingerResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newfingerResponse(struct soap*, const char *, int, struct _ns1__newfingerResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__newfingerResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__newfingerResponse(struct soap*, const char*, struct _ns1__newfingerResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__newfingerResponse
#define soap_write_PointerTo_ns1__newfingerResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newfingerResponse(soap, data), 0) || soap_put_PointerTo_ns1__newfingerResponse(soap, data, "ns1:newfingerResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newfingerResponse(struct soap*, struct _ns1__newfingerResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newfingerResponse
#define soap_read_PointerTo_ns1__newfingerResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newfingerResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newfingerResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__newfingerResponse(struct soap*, struct _ns1__newfingerResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newfinger
#define SOAP_TYPE_PointerTo_ns1__newfinger (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newfinger(struct soap*, struct _ns1__newfinger *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newfinger(struct soap*, const char *, int, struct _ns1__newfinger *const*, const char *);
SOAP_FMAC3 struct _ns1__newfinger ** SOAP_FMAC4 soap_in_PointerTo_ns1__newfinger(struct soap*, const char*, struct _ns1__newfinger **, const char*);

#ifndef soap_write_PointerTo_ns1__newfinger
#define soap_write_PointerTo_ns1__newfinger(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newfinger(soap, data), 0) || soap_put_PointerTo_ns1__newfinger(soap, data, "ns1:newfinger", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newfinger(struct soap*, struct _ns1__newfinger *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newfinger
#define soap_read_PointerTo_ns1__newfinger(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newfinger(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newfinger ** SOAP_FMAC4 soap_get_PointerTo_ns1__newfinger(struct soap*, struct _ns1__newfinger **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newqueryResponse
#define SOAP_TYPE_PointerTo_ns1__newqueryResponse (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newqueryResponse(struct soap*, struct _ns1__newqueryResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newqueryResponse(struct soap*, const char *, int, struct _ns1__newqueryResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__newqueryResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__newqueryResponse(struct soap*, const char*, struct _ns1__newqueryResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__newqueryResponse
#define soap_write_PointerTo_ns1__newqueryResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newqueryResponse(soap, data), 0) || soap_put_PointerTo_ns1__newqueryResponse(soap, data, "ns1:newqueryResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newqueryResponse(struct soap*, struct _ns1__newqueryResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newqueryResponse
#define soap_read_PointerTo_ns1__newqueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newqueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newqueryResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__newqueryResponse(struct soap*, struct _ns1__newqueryResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newquery
#define SOAP_TYPE_PointerTo_ns1__newquery (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newquery(struct soap*, struct _ns1__newquery *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newquery(struct soap*, const char *, int, struct _ns1__newquery *const*, const char *);
SOAP_FMAC3 struct _ns1__newquery ** SOAP_FMAC4 soap_in_PointerTo_ns1__newquery(struct soap*, const char*, struct _ns1__newquery **, const char*);

#ifndef soap_write_PointerTo_ns1__newquery
#define soap_write_PointerTo_ns1__newquery(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newquery(soap, data), 0) || soap_put_PointerTo_ns1__newquery(soap, data, "ns1:newquery", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newquery(struct soap*, struct _ns1__newquery *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newquery
#define soap_read_PointerTo_ns1__newquery(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newquery(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newquery ** SOAP_FMAC4 soap_get_PointerTo_ns1__newquery(struct soap*, struct _ns1__newquery **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newpassResponse
#define SOAP_TYPE_PointerTo_ns1__newpassResponse (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newpassResponse(struct soap*, struct _ns1__newpassResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newpassResponse(struct soap*, const char *, int, struct _ns1__newpassResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__newpassResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__newpassResponse(struct soap*, const char*, struct _ns1__newpassResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__newpassResponse
#define soap_write_PointerTo_ns1__newpassResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newpassResponse(soap, data), 0) || soap_put_PointerTo_ns1__newpassResponse(soap, data, "ns1:newpassResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newpassResponse(struct soap*, struct _ns1__newpassResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newpassResponse
#define soap_read_PointerTo_ns1__newpassResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newpassResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newpassResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__newpassResponse(struct soap*, struct _ns1__newpassResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__newpass
#define SOAP_TYPE_PointerTo_ns1__newpass (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__newpass(struct soap*, struct _ns1__newpass *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__newpass(struct soap*, const char *, int, struct _ns1__newpass *const*, const char *);
SOAP_FMAC3 struct _ns1__newpass ** SOAP_FMAC4 soap_in_PointerTo_ns1__newpass(struct soap*, const char*, struct _ns1__newpass **, const char*);

#ifndef soap_write_PointerTo_ns1__newpass
#define soap_write_PointerTo_ns1__newpass(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__newpass(soap, data), 0) || soap_put_PointerTo_ns1__newpass(soap, data, "ns1:newpass", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__newpass(struct soap*, struct _ns1__newpass *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__newpass
#define soap_read_PointerTo_ns1__newpass(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__newpass(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__newpass ** SOAP_FMAC4 soap_get_PointerTo_ns1__newpass(struct soap*, struct _ns1__newpass **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__isSysExistResponse
#define SOAP_TYPE_PointerTo_ns1__isSysExistResponse (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__isSysExistResponse(struct soap*, struct _ns1__isSysExistResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__isSysExistResponse(struct soap*, const char *, int, struct _ns1__isSysExistResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__isSysExistResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__isSysExistResponse(struct soap*, const char*, struct _ns1__isSysExistResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__isSysExistResponse
#define soap_write_PointerTo_ns1__isSysExistResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__isSysExistResponse(soap, data), 0) || soap_put_PointerTo_ns1__isSysExistResponse(soap, data, "ns1:isSysExistResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__isSysExistResponse(struct soap*, struct _ns1__isSysExistResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__isSysExistResponse
#define soap_read_PointerTo_ns1__isSysExistResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__isSysExistResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isSysExistResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__isSysExistResponse(struct soap*, struct _ns1__isSysExistResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__isSysExist
#define SOAP_TYPE_PointerTo_ns1__isSysExist (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__isSysExist(struct soap*, struct _ns1__isSysExist *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__isSysExist(struct soap*, const char *, int, struct _ns1__isSysExist *const*, const char *);
SOAP_FMAC3 struct _ns1__isSysExist ** SOAP_FMAC4 soap_in_PointerTo_ns1__isSysExist(struct soap*, const char*, struct _ns1__isSysExist **, const char*);

#ifndef soap_write_PointerTo_ns1__isSysExist
#define soap_write_PointerTo_ns1__isSysExist(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__isSysExist(soap, data), 0) || soap_put_PointerTo_ns1__isSysExist(soap, data, "ns1:isSysExist", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__isSysExist(struct soap*, struct _ns1__isSysExist *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__isSysExist
#define soap_read_PointerTo_ns1__isSysExist(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__isSysExist(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isSysExist ** SOAP_FMAC4 soap_get_PointerTo_ns1__isSysExist(struct soap*, struct _ns1__isSysExist **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__isEmpByCertidResponse
#define SOAP_TYPE_PointerTo_ns1__isEmpByCertidResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__isEmpByCertidResponse(struct soap*, struct _ns1__isEmpByCertidResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__isEmpByCertidResponse(struct soap*, const char *, int, struct _ns1__isEmpByCertidResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__isEmpByCertidResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__isEmpByCertidResponse(struct soap*, const char*, struct _ns1__isEmpByCertidResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__isEmpByCertidResponse
#define soap_write_PointerTo_ns1__isEmpByCertidResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__isEmpByCertidResponse(soap, data), 0) || soap_put_PointerTo_ns1__isEmpByCertidResponse(soap, data, "ns1:isEmpByCertidResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__isEmpByCertidResponse(struct soap*, struct _ns1__isEmpByCertidResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__isEmpByCertidResponse
#define soap_read_PointerTo_ns1__isEmpByCertidResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__isEmpByCertidResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isEmpByCertidResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__isEmpByCertidResponse(struct soap*, struct _ns1__isEmpByCertidResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__isEmpByCertid
#define SOAP_TYPE_PointerTo_ns1__isEmpByCertid (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__isEmpByCertid(struct soap*, struct _ns1__isEmpByCertid *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__isEmpByCertid(struct soap*, const char *, int, struct _ns1__isEmpByCertid *const*, const char *);
SOAP_FMAC3 struct _ns1__isEmpByCertid ** SOAP_FMAC4 soap_in_PointerTo_ns1__isEmpByCertid(struct soap*, const char*, struct _ns1__isEmpByCertid **, const char*);

#ifndef soap_write_PointerTo_ns1__isEmpByCertid
#define soap_write_PointerTo_ns1__isEmpByCertid(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__isEmpByCertid(soap, data), 0) || soap_put_PointerTo_ns1__isEmpByCertid(soap, data, "ns1:isEmpByCertid", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__isEmpByCertid(struct soap*, struct _ns1__isEmpByCertid *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__isEmpByCertid
#define soap_read_PointerTo_ns1__isEmpByCertid(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__isEmpByCertid(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isEmpByCertid ** SOAP_FMAC4 soap_get_PointerTo_ns1__isEmpByCertid(struct soap*, struct _ns1__isEmpByCertid **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__isEmpExistResponse
#define SOAP_TYPE_PointerTo_ns1__isEmpExistResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__isEmpExistResponse(struct soap*, struct _ns1__isEmpExistResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__isEmpExistResponse(struct soap*, const char *, int, struct _ns1__isEmpExistResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__isEmpExistResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__isEmpExistResponse(struct soap*, const char*, struct _ns1__isEmpExistResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__isEmpExistResponse
#define soap_write_PointerTo_ns1__isEmpExistResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__isEmpExistResponse(soap, data), 0) || soap_put_PointerTo_ns1__isEmpExistResponse(soap, data, "ns1:isEmpExistResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__isEmpExistResponse(struct soap*, struct _ns1__isEmpExistResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__isEmpExistResponse
#define soap_read_PointerTo_ns1__isEmpExistResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__isEmpExistResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isEmpExistResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__isEmpExistResponse(struct soap*, struct _ns1__isEmpExistResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__isEmpExist
#define SOAP_TYPE_PointerTo_ns1__isEmpExist (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__isEmpExist(struct soap*, struct _ns1__isEmpExist *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__isEmpExist(struct soap*, const char *, int, struct _ns1__isEmpExist *const*, const char *);
SOAP_FMAC3 struct _ns1__isEmpExist ** SOAP_FMAC4 soap_in_PointerTo_ns1__isEmpExist(struct soap*, const char*, struct _ns1__isEmpExist **, const char*);

#ifndef soap_write_PointerTo_ns1__isEmpExist
#define soap_write_PointerTo_ns1__isEmpExist(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__isEmpExist(soap, data), 0) || soap_put_PointerTo_ns1__isEmpExist(soap, data, "ns1:isEmpExist", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__isEmpExist(struct soap*, struct _ns1__isEmpExist *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__isEmpExist
#define soap_read_PointerTo_ns1__isEmpExist(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__isEmpExist(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__isEmpExist ** SOAP_FMAC4 soap_get_PointerTo_ns1__isEmpExist(struct soap*, struct _ns1__isEmpExist **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getEmpNameResponse
#define SOAP_TYPE_PointerTo_ns1__getEmpNameResponse (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getEmpNameResponse(struct soap*, struct _ns1__getEmpNameResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getEmpNameResponse(struct soap*, const char *, int, struct _ns1__getEmpNameResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__getEmpNameResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getEmpNameResponse(struct soap*, const char*, struct _ns1__getEmpNameResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getEmpNameResponse
#define soap_write_PointerTo_ns1__getEmpNameResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getEmpNameResponse(soap, data), 0) || soap_put_PointerTo_ns1__getEmpNameResponse(soap, data, "ns1:getEmpNameResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getEmpNameResponse(struct soap*, struct _ns1__getEmpNameResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getEmpNameResponse
#define soap_read_PointerTo_ns1__getEmpNameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getEmpNameResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getEmpNameResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getEmpNameResponse(struct soap*, struct _ns1__getEmpNameResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getEmpName
#define SOAP_TYPE_PointerTo_ns1__getEmpName (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getEmpName(struct soap*, struct _ns1__getEmpName *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getEmpName(struct soap*, const char *, int, struct _ns1__getEmpName *const*, const char *);
SOAP_FMAC3 struct _ns1__getEmpName ** SOAP_FMAC4 soap_in_PointerTo_ns1__getEmpName(struct soap*, const char*, struct _ns1__getEmpName **, const char*);

#ifndef soap_write_PointerTo_ns1__getEmpName
#define soap_write_PointerTo_ns1__getEmpName(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getEmpName(soap, data), 0) || soap_put_PointerTo_ns1__getEmpName(soap, data, "ns1:getEmpName", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getEmpName(struct soap*, struct _ns1__getEmpName *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getEmpName
#define soap_read_PointerTo_ns1__getEmpName(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getEmpName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getEmpName ** SOAP_FMAC4 soap_get_PointerTo_ns1__getEmpName(struct soap*, struct _ns1__getEmpName **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
