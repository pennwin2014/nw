<html>

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
	<title>软件类型定义</title>
	<link rel="stylesheet" type="text/css" href="/newver/resources/css/ext-all.css" /> 
	<script type="text/javascript" src="/newver/resources/js/ext-all.js"></script>
	<script type="text/javascript" src="/newver/resources/locale/ext-lang-zh_CN.js"></script>
	<style type="text/css">
		.add {
        background-image:url(/newver/resources/themes/images/share/add.gif) !important;
    }
    .remove {
        background-image:url(/newver/resources/themes/images/share/delete.gif) !important;
    }
    .exp {
        background-image:url(/newver/resources/themes/images/share/application_go.png) !important;
    }
  </style>
  <script type="text/javascript">
  	var timeGroup = "";
  	var timeFreq = "";
  	
  	Ext.QuickTips.init(); 
  	
  	Ext.onReady(function() {
  		function findIdByText(store,text){
	    	var id = text;
	    	
	    	store.each(function(rec){
	    		if(rec.get('text')==text){
	    			id = rec.get('id');
	    			return;
	    		}
	    	});
	    	return id;
		  }
		  
			Ext.define('EimData', {
	      extend: 'Ext.data.Model',
	      fields: ['id','text','leaf']
	    });
	  	
			var timeFreqStore = Ext.create('Ext.data.Store', {
				fields: ['id','text','lower','upper'],
				data:[{id:'1',text:'某天',lower:Ext.Date.format(new Date(),"Y/m/d"),upper:Ext.Date.format(new Date(),"Y/m/d")},{id:'2',text:'每周',lower:'0',upper:'6'},{id:'3',text:'每月',lower:'1',upper:'31'},{id:'4',text:'每年',lower:'1/1',upper:'12/31'}]
			});
				
			var timeFreqStore2 = Ext.create('Ext.data.Store', {
				fields: ['id','text','lower','upper'],
				data:[{id:'0',text:'全部'},{id:'1',text:'某天',lower:Ext.Date.format(new Date(),"Y/m/d"),upper:Ext.Date.format(new Date(),"Y/m/d")},{id:'2',text:'每周',lower:'0',upper:'6'},{id:'3',text:'每月',lower:'1',upper:'31'},{id:'4',text:'每年',lower:'1/1',upper:'12/31'}]
  		});
  	
			var timeGroupStore3 = Ext.create('Ext.data.Store', {
	      model: 'EimData'
	  	});
			var timeGroupStore2 = Ext.create('Ext.data.Store', {
	      model: 'EimData'
	  	});
			
			var timeGroupStore = Ext.create('Ext.data.TreeStore', {
	      model: 'EimData',
	      proxy: {
	        type: 'ajax',
	        url: '/pronline/Msg?FunName@lan_time_group_search'
	      },
	      listeners: {
	      	'load': function(thisStore,node,records,successful,eOpts){
	      		timeGroupStore2.removeAll();
	      		timeGroupStore3.removeAll();
	      		timeGroupStore2.add(records);
	      		timeGroupStore2.insert(0,{id:'0',text:'全部'});
	      		timeGroupStore3.add(records);
			    }
	      }
	  	});
	
			var sm = Ext.create('Ext.selection.CheckboxModel',{
	      listeners: {
	        selectionchange: function(sm, selections) {
						var str = parent.right_fun;
						if(str.indexOf('5322')!=-1){
	        		Ext.getCmp('baseTimeGrid').down('#baseTimeRemove').setDisabled(selections.length == 0); 
	        	}
	        }
	      }
		  });
			
			Ext.define('EimData2', {
	      extend: 'Ext.data.Model',
	      fields: ['sid','timeGroup','timeFreq','timeLower','timeUpper','startTime','stopTime']
	    });
	    
	   	var timeStore = Ext.create('Ext.data.Store', {
	      pageSize: 40,
	      model: 'EimData2',
	      remoteSort: true,
	      proxy: {
	        type: 'ajax',
	        url: '/pronline/Msg?FunName@lan_time_search',
	        reader: {
	          type:'json',
	          root: 'eimdata',
	          totalProperty: 'totalCount'
	        },         
	        simpleSortMode: true
	      },
	      listeners:{
	      	'load':function(thisStore,records,successful,operation,eOpts){
	      		thisStore.each(function(rec){
	      				//Ext.Msg.alert('timeFreq:',rec.get('timeFreq'));
	      			rec.set('timeFreq',timeFreqStore.getById(rec.get('timeFreq')).get('text'));
	      				//rec.dirty = false;
	      		});
	      		thisStore.commitChanges();
	      	}
	      }
	    });
	    timeStore.load();
	    
	    
	    function timeStoreReflash(){
	    	timeGroup = Ext.getCmp('timeGroup2').getValue();
	    	timeFreq  = Ext.getCmp('timeFreq2').getValue();
	    	
	    	if(timeGroup == '0' || timeGroup == '全部'){
	    		timeGroup = "";
	    	}
	    	if(timeFreq == '0'){
	    		timeFreq = "";
	    	}
	    	
	    	timeStore.load({params:{
	      	deal: "select",
	      	id:timeGroup,
	      	ltype:timeFreq
	      }});
	    }
	    
	    var timeRowEditing = Ext.create('Ext.grid.plugin.RowEditing', {
	      clicksToMoveEditor: 1,
	      autoCancel: false,
	      saveBtnText: '保存',   
		    cancelBtnText: '取消',   
		    errorsText: '错误信息',   
		    dirtyText: '已修改,你需要提交或取消变更',
		    completeEdit: function() {   
	        var me = this;   
	        
	        var sid = "";
	        var deal = "";
	        var ltype = "";
	        var id = "";
	        var timeLower = "";
	        var timeUpper = "";
	        var startTime = "";
	        var stopTime = "";
	        
	        id = findIdByText(timeGroupStore3,Ext.getCmp('timeGroup').getValue());
	        ltype = findIdByText(timeFreqStore,Ext.getCmp('timeFreq').getValue());
	        timeLower = Ext.getCmp('timeLower').getValue();
	        startTime = Ext.getCmp('startTime').getValue();
	        timeUpper = Ext.getCmp('timeUpper').getValue();
	        stopTime = Ext.getCmp('stopTime').getValue();
	        
	        if (me.editing && me.validateEdit()) {
	          me.editing = false;   
	          me.fireEvent('edit', me.context);   
	        }   
	        me.adding = false;
	        
	        if(me.context.record.data.sid==""){
	        	deal = "insert";
	        }else{
	        	deal = "update";
	        	sid = me.context.record.data.sid;
	        }
	        ltype = findIdByText(timeFreqStore,Ext.getCmp('timeFreq').getValue());
	        timeStore.currentPage=1; 
	        timeStore.load({params:{
	        	deal: deal,
	        	sid:sid,
	        	id:id,
	        	ltype:ltype,
	        	llower:timeLower,
	        	lupper:timeUpper,
	        	startTime:startTime,
	        	stopTime:stopTime
	        }});
	        Ext.getCmp('timeGroup2').select('0');
	        Ext.getCmp('timeFreq2').select('0');
				},
				cancelEdit: function(){
	        var me = this; 
	 
	        if (me.editing) {   
	          me.getEditor().cancelEdit();   
	          me.editing = false;   
	          me.fireEvent('canceledit', me.context);    
	          if (me.autoRecoverOnCancel){ 
	            var tmpid=me.context.record.data.sid;
	            if((!tmpid)){  	 
	                me.context.record.store.remove(me.context.record);   
	                me.adding = false;
	            }else{   
	                //不需要reject,因为Editor没有更改record.   
	                //me.context.record.reject()   
	            }   
	          }
	        	timeStore.load();   
	        }    
	    	}   
	    });
    
		  
		  Ext.create('Ext.panel.Panel',{
		  	renderTo:Ext.getBody(),
				layout: 'hbox',
				width: '100%',
				height: '100%',
				items:[{
					xtype: 'treepanel',
					id:		'timeGroupTree',
					width: '20%',
					height: '100%',
					rootVisible: true,
					store: timeGroupStore,
					animate:false,
					root: {
	          text: '时间类别',
	          id: '0',
	          expanded: true
		      },
		      tbar:[{
		      		xtype: 'button',
		      		text:	'添加时间类别',
						  iconCls:'add',
						  id: "addtimeclass1",
		      		handler: function(btn, e){
		      			//添加时间组方法
		      			Ext.create('Ext.window.Window', {
							    xtype: 'form',
							    title: '添加时间类别',
							    id:    'timeAddWin',
							    height: 130,
							    width: 200,
							    modal:true,
							    buttonAlign:'center',
							    bodyStyle: 'padding:10px 0px 0px 15px',
								  items: [{  
						        xtype: 'label',
						        text: '请输入时间类别：'
						      },{
						      	xtype: 'textfield',
						      	id:   'addTimeGroupText'
						      }],
						      buttons:[{
						      	text:  '确定',
						      	handler: function(btn, e){
						      	//	Ext.Msg.alert('添加成功！');
						      		timeGroupStore.load({params:{deal:"insert",text:Ext.getCmp('addTimeGroupText').getValue()}});
						      		Ext.getCmp('timeAddWin').close();
						      	}
						      },{
						      	text:  '取消',
						      	handler: function(btn, e){
						      		Ext.getCmp('timeAddWin').close();
						      	}
						      }]
								}).showAt(e.getX()+100,e.getY()+30);
		      		}	
	      	},{
	      		xtype: 'button',
	      		text:	'删除时间类别',
					  iconCls:'remove',
					  disabled: true,
					  id:  'baseTimeTreeRemove',
	      		handler: function(){
	      			//删除时间组方法
	      			Ext.Msg.show({
	      				title:"提示",
	      				msg:"该软件类型可能在策略中引用,您仍要删除该时间类别？",
					      modal:true,
	      				buttons:Ext.Msg.YESNO,	      				
	      				fn:function(btn){
	      					if(btn == 'yes'){
	      						var deleteSelect = Ext.getCmp('timeGroupTree').getSelectionModel().getLastSelected();
			      				timeGroupStore.load({params:{deal:"delete",treeId:deleteSelect.get('id')}});
			      				timeStore.load({params:{deal:"delete",id:deleteSelect.get('id')}});
			      				if(Ext.getCmp('timeGroup2').getValue() == deleteSelect.get('id')){
			      					Ext.getCmp('timeGroup2').select('0');
			      				}
	      					}
	      				},
	      				icon: Ext.Msg.QUESTION
	      			}).setPosition(300,100);
	      		}	
	      	}],
		      listeners:{
		      	'itemdblclick':function(thisView,record,item,index,e,eOpts){
		      		Ext.create('Ext.window.Window', {
						    xtype: 'form',
						    title: '修改时间类别',
						    id:    'updateWin',
						    height: 130,
						    width: 200,
						    modal: true,
						    buttonAlign:'center',
						    bodyStyle: 'padding:10px 0px 0px 15px',
							  items: [{  
					        xtype: 'label',
					        text: '请输入新的时间类别：'
					      },{
					      	xtype: 'textfield',
					      	id:   'updateTimeGroupText'
					      }],
					      buttons:[{
					      	text:  '确定',
					      	handler: function(btn, e){
					      		timeGroupStore.load({params:{deal:"update",text:Ext.getCmp('updateTimeGroupText').getValue(),treeId:record.get('id')}});
					      		Ext.getCmp('timeUpdateWin').close();
					      	}
					      },{
					      	text:  '取消',
					      	handler: function(btn, e){
					      		Ext.getCmp('timeUpdateWin').close();
					      	}
					      }]
							}).showAt(e.getX()+100,e.getY()+30);
		      	},
		      	'itemcontextmenu' : function(view, rcd, item, idx, event, eOpts){
		      		event.stopEvent();
		      		if(rcd.isLeaf()){
								Ext.create('Ext.menu.Menu', {
									floating:	true,
									items: [{
										text: '修改',
										handler: function(){
											Ext.create('Ext.window.Window', {
									    xtype: 'form',
									    title: '修改时间类别',
									    id:    'timeUpdateWin',
									    height: 130,
									    width: 200,
									    modal:true,
									    buttonAlign:'center',
									    bodyStyle: 'padding:10px 0px 0px 15px',
										  items: [{  
								        xtype: 'label',
								        text: '请输入新的时间类别：'
								      },{
								      	xtype: 'textfield',
								      	id:   'updateTimeGroupText'
								      }],
								      buttons:[{
								      	text:  '确定',
								      	handler: function(btn, e){
								      	//	Ext.Msg.alert('添加成功！');
								      		timeGroupStore.load({params:{deal:"update",text:Ext.getCmp('updateTimeGroupText').getValue(),treeId:rcd.get('id')}});
								      		Ext.getCmp('timeUpdateWin').close();
								      	}
								      },{
								      	text:  '取消',
								      	handler: function(btn, e){
								      		Ext.getCmp('timeUpdateWin').close();
								      	}
								      }]
										}).showAt(event.getX()+100,event.getY()+30);
										}
									},{
										text: '删除',
										id:"deltimeclass2",
										handler: function(){
											Ext.Msg.show({
					      				title:"提示",
					      				msg:"该软件类型可能在策略中引用,您仍要删除该时间类别？",
					      				modal:true,
					      				buttons:Ext.Msg.YESNO,	      				
					      				fn:function(btn){
					      					if(btn == 'yes'){
					      						timeGroupStore.load({params:{deal:"delete",treeId:rcd.get('id')}});
							      				timeStore.load({params:{deal:"delete",id:rcd.get('id')}});
							      				if(Ext.getCmp('timeGroup2').getValue() == rcd.get('id')){
							      					Ext.getCmp('timeGroup2').select('0');
							      				}
					      					}
					      				},
					      				icon: Ext.Msg.QUESTION
					      			}).setPosition(300,100);
										}
									}]	
								}).showAt(event.getXY());
							}else{
								Ext.create('Ext.menu.Menu', {
									floating:	true,
									items: [{
										text: '添加',
										id: "addtimeclass2",
										handler: function(){
											Ext.create('Ext.window.Window', {
										    xtype: 'form',
										    title: '添加时间类别',
										    id:    'timeAddWin',
										    height: 130,
										    width: 200,
										    modal:true,
										    buttonAlign:'center',
										    bodyStyle: 'padding:10px 0px 0px 15px',
											  items: [{  
									        xtype: 'label',
									        text: '请输入时间类别：'
									      },{
									      	xtype: 'textfield',
									      	id:   'addTimeGroupText'
									      }],
									      buttons:[{
									      	text:  '确定',
									      	handler: function(btn, e){
									      	//	Ext.Msg.alert('添加成功！');
									      		timeGroupStore.load({params:{deal:"insert",text:Ext.getCmp('addTimeGroupText').getValue()}});
									      		Ext.getCmp('timeAddWin').close();
									      	}
									      },{
									      	text:  '取消',
									      	handler: function(btn, e){
									      		Ext.getCmp('timeAddWin').close();
									      	}
									      }]
											}).showAt(event.getX()+100,event.getY()+30);
										}
									}]	
								}).showAt(event.getXY());
							}	
	  				},
	  				'selectionchange':function(thisModele,selected,eOpts){
	  					if(selected.length){
	  						if(selected[0].isLeaf()){
									var str = parent.right_fun;
	  							if(str.indexOf('5322')!=-1){
	  								Ext.getCmp('baseTimeTreeRemove').setDisabled(false);
	  							}
	  							timeGroup = selected[0].get('id');
	  							Ext.getCmp('timeGroup2').select(timeGroup);
	  						}else{
	  							Ext.getCmp('baseTimeTreeRemove').setDisabled(true);
	  							timeGroup = "";
	  							Ext.getCmp('timeGroup2').setValue('0');
	  						}
	  						timeStore.currentPage=1;
	  						timeStoreReflash();
	  					}
	  				}
		      }
				},{
					xtype: 'grid',
					width: '80%',
					height: '100%',
					id:     'baseTimeGrid',
					store: timeStore,
					selModel: sm,
					plugins: timeRowEditing,
					columns:[{
            text: "sid",
						dataIndex:	'sid'	,
						hidden:			true
					},{
            text: "时间类别",
            dataIndex: 'timeGroup', 
            sortable: true,
          	flex:1,
            editor: {
            	xtype: 'combobox',
            	id:    'timeGroup',
            	triggerAction: 'all',
            	valueField:'id',
	        		displayField: 'text',
	        		store: timeGroupStore3,
	        		allowBlank: false,
          		queryMode: 'local'
            }
	        },{
            text:"时间频率",
            dataIndex: 'timeFreq',
            hidden: false,
            sortable: true,
          	flex:1,
            editor: {
            	xtype: 'combobox',
            	id : 'timeFreq',
            	triggerAction: 'all',
            	value: '0',
            	valueField:'id',
	        		displayField: 'text',
	        		store: timeFreqStore,
	        		allowBlank: false,
	        		listeners:{
	        			'change': function(thisField,newValue,oldValue,eOpts){
	        				Ext.getCmp('timeLower').setValue(timeFreqStore.getById(newValue).get('lower'));
	        				Ext.getCmp('timeUpper').setValue(timeFreqStore.getById(newValue).get('upper'));
	        			}
	        		}
            }
	        },{
            text: "时间下限",
            dataIndex: 'timeLower',
            sortable: true,
          	flex:1,
            editor: {
            	xtype: 'textfield',
            	id:   'timeLower'
            }
	        },{
            text: "时间上限",
            dataIndex: 'timeUpper',
            sortable: true,
          	flex:1,
            editor: {
            	xtype: 'textfield',
            	id:   'timeUpper'
            }
	        },{
	        	text:"开始时间",
            dataIndex: 'startTime',
          	flex:1,
            editor: {
            	xtype: 'textfield',
            	id:   'startTime',
            	allowBlank:false,
            	emptyText: "8:30:30",
            	regex: /^(([0-1]?[0-9]{1})|(2[0-3]{1})):([0-5]?[0-9]{1}):([0-5]?[0-9]{1})$/,
            	regexText: "请输入正确的时间格式：8:30:00"
            }
	        },{
	        	text: "结束时间", 
	        	dataIndex: 'stopTime',
          	flex:1,
            editor: {
            	xtype: 'textfield',
            	id:   'stopTime',
            	allowBlank:false,
            	emptyText: "17:30:30",
          		regex: /^(([0-1]?[0-9]{1})|(2[0-3]{1})):([0-5]?[0-9]{1}):([0-5]?[0-9]{1})$/,
          		regexText: "请输入正确的时间格式：17:30:00"
            }
	        }],
	        tbar: [{
	        	xtype: 'pagingtoolbar',
	        	store: timeStore,
	        	border: 0,
	        //	displayInfo: true,
	        //  displayMsg: '显示{0} - {1}条记录 共{2}条',
	        //  emptyMsg: '没有记录可显示',
	          doRefresh:function(){  
				    	timeStoreReflash();
				    },
				    moveLast:function(){
				    	var b=this,a=b.getPageData().pageCount;
				    	if(b.fireEvent("beforechange",b,a)!==false){
				    		timeStore.currentPage=a;
				    		timeStoreReflash();
				      }
				    },
				    moveFirst:function(){
					    if(this.fireEvent("beforechange",this,1)!==false){
					     	timeStore.currentPage=1;
					    	timeStoreReflash();
					    }
					  }, 
				   	movePrevious:function(){
				   		var b=this,a=b.store.currentPage-1;
				   		if(a>0){
				   			if(b.fireEvent("beforechange",b,a)!==false){
				   				timeStore.currentPage=a;
				   				timeStoreReflash();
				   			}
				   		}
				   	},
				   	moveNext:function(){
				   		var c=this,b=c.getPageData().pageCount,a=c.store.currentPage+1;
				   		if(a<=b){
				   			if(c.fireEvent("beforechange",c,a)!==false){
				   				timeStore.currentPage=a;
				   				timeStoreReflash();
				   			}
				   		}
				   	},  
				    onPagingKeyDown:function(i,h){
				    	var d=this,b=h.getKey(),c=d.getPageData(),a=h.shiftKey?10:1,g;
				    	if(b==h.RETURN){
				    		h.stopEvent();
				    		g=d.readPageFromInput(c);
				        if(g!==false){
				        	g=Math.min(Math.max(1,g),c.pageCount);
				         	if(d.fireEvent("beforechange",d,g)!==false){
						        //d.timeStore.loadPage(g)
						        d.store.currentPage=g;
					         	timeStoreReflash();
					        }        
					      }
					    }else{
				      	if(b==h.HOME||b==h.END){
				    			h.stopEvent();g=b==h.HOME?1:c.pageCount;i.setValue(g)
				       	}else{
				        	if(b==h.UP||b==h.PAGEUP||b==h.DOWN||b==h.PAGEDOWN){
					          h.stopEvent();g=d.readPageFromInput(c);
					          if(g){
					            if(b==h.DOWN||b==h.PAGEDOWN){a*=-1}
					            g+=a;
					            if(g>=1&&g<=c.pages){
					            	i.setValue(g)
					            }
					          }
				         	}
				        }
				      }  
				    } 
	        },{
	        	xtype: 'combobox',
	        	id:   'timeFreq2',
	        	width: 100,
	        	fieldLabel: '时间',
	        	labelWidth: 40,
	        	triggerAction: 'all',
	        	value :'0',
	        	valueField:'id',
	        	displayField: 'text',
	        	store:timeFreqStore2,
        		listeners:{
        			'change': function(thisField,newValue,oldValue,eOpts){
        				timeFreq = newValue;
        				timeStore.currentPage=1;
        				timeStoreReflash();
	        		}
        		}
	        },{
	        	xtype: 'combobox',
	        	fieldLabel: '时间类型',
	        	id:				'timeGroup2',
	        	width: 150,
	        	labelWidth: 60,
          	triggerAction: 'all',
          	valueField:'id',
          	value: '全部',
          	queryMode: 'local',
        		displayField: 'text',
        		store: timeGroupStore2,
        		listeners:{
        			'change': function(thisField,newValue,oldValue,eOpts){
        				timeGroup = newValue;
        				timeStore.currentPage=1;
        				timeStoreReflash();
        			}
        		}
	        },{
	        	xtype: 'button',
	        	text:  '添加',
						iconCls:'add',
						id: "addtime",
	        	handler: function(){
	        	//添加时间数据方法
	        		var timeLower = "";
	        		var timeUpper = "";
	        		
	        		timeRowEditing.cancelEdit();
	        		if(Ext.getCmp('timeGroup2').getRawValue()!='全部'){
	        			timeGroup=Ext.getCmp('timeGroup2').getRawValue();
        			}else{
        				timeGroup = "";
        			}
        			if(Ext.getCmp('timeFreq2').getRawValue()!='全部'){
	        			timeFreq=Ext.getCmp('timeFreq2').getRawValue();
        			}else{
        				timeFreq = "";
        			}
	        		timeCell = Ext.create('EimData2', {
	        			timeGroup: timeGroup,
	        			timeFreq:	 timeFreq,
	        			timeLower: timeLower,
	        			timeUpper: timeUpper
	        		});
	        		timeStore.insert(0, timeCell)
	        		timeRowEditing.startEdit(0, 0);
	        	}
	        },{
	        	xtype: 'button',
	        	text:  '删除',
	        	id:			'baseTimeRemove',
	        	disabled: true,
						iconCls:'remove',
	        	handler: function(){
	        	//删除时间数据方法
	        		Ext.Msg.show({
	      				title:"提示",
	      				msg:"您确定要删除这些时间项目吗？",
					      modal:true,
	      				buttons:Ext.Msg.YESNO,	      				
	      				fn:function(btn){
	      					if(btn == 'yes'){
	      						var rows=sm.getSelection();
										for(var i=0;i<rows.length;i++){
			              	if(i==0){
			              		selsid=rows[i].get('sid');
			              	}else{
			                	selsid=selsid+","+rows[i].get('sid');
			                }
										}
										//Ext.Msg.alert('删除','删除了'+selsid);
										timeStore.currentPage=1;
										timeStore.load({params:{
						        	deal: 'delete',
						        	sid:selsid
						        }});
	      					}
	      				},
	      				icon: Ext.Msg.QUESTION
	      			}).setPosition(300,100);
	        		
	        	}
	        }]
				}]
			});
			var str = parent.right_fun;
			//console.info(str,",",str.indexOf('1110'))
			if(str.indexOf('5321')==-1){
		  	Ext.getCmp('addtimeclass1').setDisabled(true);
		  	Ext.getCmp('addtimeclass2').setDisabled(true);
	    }
	    
	    if(str.indexOf('5322')==-1){
		  	Ext.getCmp('deltimeclass2').setDisabled(true);
	    }
	    if(str.indexOf('5323')==-1){
		  	Ext.getCmp('addtime').setDisabled(true);
	    }
		});
  </script>
</head>
<body>
	
</body>
</html>